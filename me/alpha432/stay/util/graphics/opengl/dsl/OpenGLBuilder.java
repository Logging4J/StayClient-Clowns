//Deobfuscated with https://github.com/SimplyProgrammer/Minecraft-Deobfuscator3000 using mappings "C:\Users\L4J\Desktop\clown Down\Minecraft-Deobfuscator3000-master\1.12 stable mappings"!

//Decompiled by Procyon!

package me.alpha432.stay.util.graphics.opengl.dsl;

import kotlin.*;
import org.lwjgl.opengl.*;
import org.jetbrains.annotations.*;
import kotlin.jvm.internal.*;
import java.nio.*;

@Metadata(mv = { 1, 6, 0 }, k = 1, xi = 48, d1 = { "\u0000[\n\u0002\u0018\u0002\n\u0002\u0010\u0000\n\u0002\b\u0002\n\u0002\u0010\b\n\u0003\b©\b\n\u0002\u0010\u0002\n\u0002\b\u0002\n\u0002\u0010\u0007\n\u0002\b\u0005\n\u0002\u0018\u0002\n\u0002\b\t\n\u0002\u0010\t\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0007\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\u0018\u0002\n\u0002\b\u0004\n\u0002\u0018\u0002\n\u0002\b\u0007\u0018\u00002\u00020\u0001B\u0005¢\u0006\u0002\u0010\u0002J\u001b\u0010\u00ad\b\u001a\u00030®\b2\u0007\u0010¯\b\u001a\u00020\u00042\b\u0010°\b\u001a\u00030±\bJ\u001b\u0010²\b\u001a\u00030®\b2\u0007\u0010³\b\u001a\u00020\u00042\b\u0010´\b\u001a\u00030±\bJ$\u0010µ\b\u001a\u00030®\b2\f\u0010¶\b\u001a\u00070\u0004j\u0003`·\b2\f\u0010¸\b\u001a\u00070\u0004j\u0003`·\bJL\u0010¹\b\u001a\u00030®\b2\u0007\u0010º\b\u001a\u00020\u00042\u0007\u0010»\b\u001a\u00020\u00042\b\u0010¼\b\u001a\u00030±\b2\b\u0010½\b\u001a\u00030±\b2\b\u0010¾\b\u001a\u00030±\b2\b\u0010¿\b\u001a\u00030±\b2\b\u0010\u00c0\b\u001a\u00030\u00c1\bJL\u0010\u00c2\b\u001a\u00030®\b2\u0007\u0010º\b\u001a\u00020\u00042\u0007\u0010»\b\u001a\u00020\u00042\b\u0010¼\b\u001a\u00030±\b2\b\u0010½\b\u001a\u00030±\b2\b\u0010¾\b\u001a\u00030±\b2\b\u0010¿\b\u001a\u00030±\b2\b\u0010\u00c2\b\u001a\u00030\u00c3\bJ$\u0010\u00c4\b\u001a\u00030®\b2\f\u0010\u00c5\b\u001a\u00070\u0004j\u0003`·\b2\f\u0010\u00c6\b\u001a\u00070\u0004j\u0003`·\bJ\u0016\u0010\u00c7\b\u001a\u00030®\b2\f\u0010\u00c8\b\u001a\u00070\u0004j\u0003`·\bJ\u0017\u0010\u00c9\b\u001a\u00030®\b2\r\u0010\u00ca\b\u001a\b0\u00c3\bj\u0003`\u00cb\bJ\u0017\u0010\u00c9\b\u001a\u00030®\b2\r\u0010\u00ca\b\u001a\b0\u00cc\bj\u0003`\u00cd\bJ\u0017\u0010\u00c9\b\u001a\u00030®\b2\r\u0010\u00ca\b\u001a\b0\u00ce\bj\u0003`\u00cf\bJ\u0016\u0010\u00d0\b\u001a\u00030®\b2\f\u0010\u00d1\b\u001a\u00070\u0004j\u0003`·\bJD\u0010\u00d2\b\u001a\u00030®\b2\r\u0010\u00d3\b\u001a\b0±\bj\u0003`\u00d4\b2\r\u0010\u00d5\b\u001a\b0±\bj\u0003`\u00d4\b2\r\u0010\u00d6\b\u001a\b0±\bj\u0003`\u00d4\b2\r\u0010\u00d7\b\u001a\b0±\bj\u0003`\u00d4\bJ0\u0010\u00d8\b\u001a\u00030®\b2\b\u0010\u00d3\b\u001a\u00030±\b2\b\u0010\u00d5\b\u001a\u00030±\b2\b\u0010\u00d6\b\u001a\u00030±\b2\b\u0010\u00d7\b\u001a\u00030±\bJ\b\u0010\u00d9\b\u001a\u00030®\bJ\b\u0010\u00da\b\u001a\u00030®\bR\u0014\u0010\u0003\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u0005\u0010\u0006R\u0014\u0010\u0007\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\b\u0010\u0006R\u0014\u0010\t\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\n\u0010\u0006R\u0014\u0010\u000b\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\f\u0010\u0006R\u0014\u0010\r\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u000e\u0010\u0006R\u0014\u0010\u000f\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u0010\u0010\u0006R\u0014\u0010\u0011\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u0012\u0010\u0006R\u0014\u0010\u0013\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u0014\u0010\u0006R\u0014\u0010\u0015\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u0016\u0010\u0006R\u0014\u0010\u0017\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u0018\u0010\u0006R\u0014\u0010\u0019\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u001a\u0010\u0006R\u0014\u0010\u001b\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u001c\u0010\u0006R\u0014\u0010\u001d\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\u001e\u0010\u0006R\u0014\u0010\u001f\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b \u0010\u0006R\u0014\u0010!\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\"\u0010\u0006R\u0014\u0010#\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b$\u0010\u0006R\u0014\u0010%\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b&\u0010\u0006R\u0014\u0010'\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b(\u0010\u0006R\u0014\u0010)\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b*\u0010\u0006R\u0014\u0010+\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b,\u0010\u0006R\u0014\u0010-\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b.\u0010\u0006R\u0014\u0010/\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b0\u0010\u0006R\u0014\u00101\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b2\u0010\u0006R\u0014\u00103\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b4\u0010\u0006R\u0014\u00105\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b6\u0010\u0006R\u0014\u00107\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b8\u0010\u0006R\u0014\u00109\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b:\u0010\u0006R\u0014\u0010;\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b<\u0010\u0006R\u0014\u0010=\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b>\u0010\u0006R\u0014\u0010?\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b@\u0010\u0006R\u0014\u0010A\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bB\u0010\u0006R\u0014\u0010C\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bD\u0010\u0006R\u0014\u0010E\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bF\u0010\u0006R\u0014\u0010G\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bH\u0010\u0006R\u0014\u0010I\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bJ\u0010\u0006R\u0014\u0010K\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bL\u0010\u0006R\u0014\u0010M\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bN\u0010\u0006R\u0014\u0010O\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bP\u0010\u0006R\u0014\u0010Q\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bR\u0010\u0006R\u0014\u0010S\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bT\u0010\u0006R\u0014\u0010U\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bV\u0010\u0006R\u0014\u0010W\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bX\u0010\u0006R\u0014\u0010Y\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bZ\u0010\u0006R\u0014\u0010[\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b\\\u0010\u0006R\u0014\u0010]\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b^\u0010\u0006R\u0014\u0010_\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b`\u0010\u0006R\u0014\u0010a\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bb\u0010\u0006R\u0014\u0010c\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bd\u0010\u0006R\u0014\u0010e\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bf\u0010\u0006R\u0014\u0010g\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bh\u0010\u0006R\u0014\u0010i\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bj\u0010\u0006R\u0014\u0010k\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bl\u0010\u0006R\u0014\u0010m\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bn\u0010\u0006R\u0014\u0010o\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bp\u0010\u0006R\u0014\u0010q\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\br\u0010\u0006R\u0014\u0010s\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bt\u0010\u0006R\u0014\u0010u\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bv\u0010\u0006R\u0014\u0010w\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bx\u0010\u0006R\u0014\u0010y\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\bz\u0010\u0006R\u0014\u0010{\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b|\u0010\u0006R\u0014\u0010}\u001a\u00020\u0004X\u0086D¢\u0006\b\n\u0000\u001a\u0004\b~\u0010\u0006R\u0015\u0010\u007f\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0080\u0001\u0010\u0006R\u0016\u0010\u0081\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0082\u0001\u0010\u0006R\u0016\u0010\u0083\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0084\u0001\u0010\u0006R\u0016\u0010\u0085\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0086\u0001\u0010\u0006R\u0016\u0010\u0087\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0088\u0001\u0010\u0006R\u0016\u0010\u0089\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008a\u0001\u0010\u0006R\u0016\u0010\u008b\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008c\u0001\u0010\u0006R\u0016\u0010\u008d\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008e\u0001\u0010\u0006R\u0016\u0010\u008f\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0090\u0001\u0010\u0006R\u0016\u0010\u0091\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0092\u0001\u0010\u0006R\u0016\u0010\u0093\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0094\u0001\u0010\u0006R\u0016\u0010\u0095\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0096\u0001\u0010\u0006R\u0016\u0010\u0097\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0098\u0001\u0010\u0006R\u0016\u0010\u0099\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009a\u0001\u0010\u0006R\u0016\u0010\u009b\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009c\u0001\u0010\u0006R\u0016\u0010\u009d\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009e\u0001\u0010\u0006R\u0016\u0010\u009f\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b \u0001\u0010\u0006R\u0016\u0010¡\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¢\u0001\u0010\u0006R\u0016\u0010£\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¤\u0001\u0010\u0006R\u0016\u0010¥\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¦\u0001\u0010\u0006R\u0016\u0010§\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¨\u0001\u0010\u0006R\u0016\u0010©\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bª\u0001\u0010\u0006R\u0016\u0010«\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¬\u0001\u0010\u0006R\u0016\u0010\u00ad\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b®\u0001\u0010\u0006R\u0016\u0010¯\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b°\u0001\u0010\u0006R\u0016\u0010±\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b²\u0001\u0010\u0006R\u0016\u0010³\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b´\u0001\u0010\u0006R\u0016\u0010µ\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¶\u0001\u0010\u0006R\u0016\u0010·\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¸\u0001\u0010\u0006R\u0016\u0010¹\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bº\u0001\u0010\u0006R\u0016\u0010»\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¼\u0001\u0010\u0006R\u0016\u0010½\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¾\u0001\u0010\u0006R\u0016\u0010¿\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c0\u0001\u0010\u0006R\u0016\u0010\u00c1\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c2\u0001\u0010\u0006R\u0016\u0010\u00c3\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c4\u0001\u0010\u0006R\u0016\u0010\u00c5\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c6\u0001\u0010\u0006R\u0016\u0010\u00c7\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c8\u0001\u0010\u0006R\u0016\u0010\u00c9\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ca\u0001\u0010\u0006R\u0016\u0010\u00cb\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00cc\u0001\u0010\u0006R\u0016\u0010\u00cd\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ce\u0001\u0010\u0006R\u0016\u0010\u00cf\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d0\u0001\u0010\u0006R\u0016\u0010\u00d1\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d2\u0001\u0010\u0006R\u0016\u0010\u00d3\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d4\u0001\u0010\u0006R\u0016\u0010\u00d5\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d6\u0001\u0010\u0006R\u0016\u0010\u00d7\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d8\u0001\u0010\u0006R\u0016\u0010\u00d9\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00da\u0001\u0010\u0006R\u0016\u0010\u00db\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00dc\u0001\u0010\u0006R\u0016\u0010\u00dd\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00de\u0001\u0010\u0006R\u0016\u0010\u00df\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e0\u0001\u0010\u0006R\u0016\u0010\u00e1\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e2\u0001\u0010\u0006R\u0016\u0010\u00e3\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e4\u0001\u0010\u0006R\u0016\u0010\u00e5\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e6\u0001\u0010\u0006R\u0016\u0010\u00e7\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e8\u0001\u0010\u0006R\u0016\u0010\u00e9\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ea\u0001\u0010\u0006R\u0016\u0010\u00eb\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ec\u0001\u0010\u0006R\u0016\u0010\u00ed\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ee\u0001\u0010\u0006R\u0016\u0010\u00ef\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f0\u0001\u0010\u0006R\u0016\u0010\u00f1\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f2\u0001\u0010\u0006R\u0016\u0010\u00f3\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f4\u0001\u0010\u0006R\u0016\u0010\u00f5\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f6\u0001\u0010\u0006R\u0016\u0010\u00f7\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f8\u0001\u0010\u0006R\u0016\u0010\u00f9\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fa\u0001\u0010\u0006R\u0016\u0010\u00fb\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fc\u0001\u0010\u0006R\u0016\u0010\u00fd\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fe\u0001\u0010\u0006R\u0016\u0010\u00ff\u0001\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0080\u0002\u0010\u0006R\u0016\u0010\u0081\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0082\u0002\u0010\u0006R\u0016\u0010\u0083\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0084\u0002\u0010\u0006R\u0016\u0010\u0085\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0086\u0002\u0010\u0006R\u0016\u0010\u0087\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0088\u0002\u0010\u0006R\u0016\u0010\u0089\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008a\u0002\u0010\u0006R\u0016\u0010\u008b\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008c\u0002\u0010\u0006R\u0016\u0010\u008d\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008e\u0002\u0010\u0006R\u0016\u0010\u008f\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0090\u0002\u0010\u0006R\u0016\u0010\u0091\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0092\u0002\u0010\u0006R\u0016\u0010\u0093\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0094\u0002\u0010\u0006R\u0016\u0010\u0095\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0096\u0002\u0010\u0006R\u0016\u0010\u0097\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0098\u0002\u0010\u0006R\u0016\u0010\u0099\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009a\u0002\u0010\u0006R\u0016\u0010\u009b\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009c\u0002\u0010\u0006R\u0016\u0010\u009d\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009e\u0002\u0010\u0006R\u0016\u0010\u009f\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b \u0002\u0010\u0006R\u0016\u0010¡\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¢\u0002\u0010\u0006R\u0016\u0010£\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¤\u0002\u0010\u0006R\u0016\u0010¥\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¦\u0002\u0010\u0006R\u0016\u0010§\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¨\u0002\u0010\u0006R\u0016\u0010©\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bª\u0002\u0010\u0006R\u0016\u0010«\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¬\u0002\u0010\u0006R\u0016\u0010\u00ad\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b®\u0002\u0010\u0006R\u0016\u0010¯\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b°\u0002\u0010\u0006R\u0016\u0010±\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b²\u0002\u0010\u0006R\u0016\u0010³\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b´\u0002\u0010\u0006R\u0016\u0010µ\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¶\u0002\u0010\u0006R\u0016\u0010·\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¸\u0002\u0010\u0006R\u0016\u0010¹\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bº\u0002\u0010\u0006R\u0016\u0010»\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¼\u0002\u0010\u0006R\u0016\u0010½\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¾\u0002\u0010\u0006R\u0016\u0010¿\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c0\u0002\u0010\u0006R\u0016\u0010\u00c1\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c2\u0002\u0010\u0006R\u0016\u0010\u00c3\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c4\u0002\u0010\u0006R\u0016\u0010\u00c5\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c6\u0002\u0010\u0006R\u0016\u0010\u00c7\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c8\u0002\u0010\u0006R\u0016\u0010\u00c9\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ca\u0002\u0010\u0006R\u0016\u0010\u00cb\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00cc\u0002\u0010\u0006R\u0016\u0010\u00cd\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ce\u0002\u0010\u0006R\u0016\u0010\u00cf\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d0\u0002\u0010\u0006R\u0016\u0010\u00d1\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d2\u0002\u0010\u0006R\u0016\u0010\u00d3\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d4\u0002\u0010\u0006R\u0016\u0010\u00d5\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d6\u0002\u0010\u0006R\u0016\u0010\u00d7\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d8\u0002\u0010\u0006R\u0016\u0010\u00d9\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00da\u0002\u0010\u0006R\u0016\u0010\u00db\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00dc\u0002\u0010\u0006R\u0016\u0010\u00dd\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00de\u0002\u0010\u0006R\u0016\u0010\u00df\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e0\u0002\u0010\u0006R\u0016\u0010\u00e1\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e2\u0002\u0010\u0006R\u0016\u0010\u00e3\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e4\u0002\u0010\u0006R\u0016\u0010\u00e5\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e6\u0002\u0010\u0006R\u0016\u0010\u00e7\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e8\u0002\u0010\u0006R\u0016\u0010\u00e9\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ea\u0002\u0010\u0006R\u0016\u0010\u00eb\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ec\u0002\u0010\u0006R\u0016\u0010\u00ed\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ee\u0002\u0010\u0006R\u0016\u0010\u00ef\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f0\u0002\u0010\u0006R\u0016\u0010\u00f1\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f2\u0002\u0010\u0006R\u0016\u0010\u00f3\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f4\u0002\u0010\u0006R\u0016\u0010\u00f5\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f6\u0002\u0010\u0006R\u0016\u0010\u00f7\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f8\u0002\u0010\u0006R\u0016\u0010\u00f9\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fa\u0002\u0010\u0006R\u0016\u0010\u00fb\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fc\u0002\u0010\u0006R\u0016\u0010\u00fd\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fe\u0002\u0010\u0006R\u0016\u0010\u00ff\u0002\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0080\u0003\u0010\u0006R\u0016\u0010\u0081\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0082\u0003\u0010\u0006R\u0016\u0010\u0083\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0084\u0003\u0010\u0006R\u0016\u0010\u0085\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0086\u0003\u0010\u0006R\u0016\u0010\u0087\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0088\u0003\u0010\u0006R\u0016\u0010\u0089\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008a\u0003\u0010\u0006R\u0016\u0010\u008b\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008c\u0003\u0010\u0006R\u0016\u0010\u008d\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008e\u0003\u0010\u0006R\u0016\u0010\u008f\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0090\u0003\u0010\u0006R\u0016\u0010\u0091\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0092\u0003\u0010\u0006R\u0016\u0010\u0093\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0094\u0003\u0010\u0006R\u0016\u0010\u0095\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0096\u0003\u0010\u0006R\u0016\u0010\u0097\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0098\u0003\u0010\u0006R\u0016\u0010\u0099\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009a\u0003\u0010\u0006R\u0016\u0010\u009b\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009c\u0003\u0010\u0006R\u0016\u0010\u009d\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009e\u0003\u0010\u0006R\u0016\u0010\u009f\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b \u0003\u0010\u0006R\u0016\u0010¡\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¢\u0003\u0010\u0006R\u0016\u0010£\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¤\u0003\u0010\u0006R\u0016\u0010¥\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¦\u0003\u0010\u0006R\u0016\u0010§\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¨\u0003\u0010\u0006R\u0016\u0010©\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bª\u0003\u0010\u0006R\u0016\u0010«\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¬\u0003\u0010\u0006R\u0016\u0010\u00ad\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b®\u0003\u0010\u0006R\u0016\u0010¯\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b°\u0003\u0010\u0006R\u0016\u0010±\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b²\u0003\u0010\u0006R\u0016\u0010³\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b´\u0003\u0010\u0006R\u0016\u0010µ\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¶\u0003\u0010\u0006R\u0016\u0010·\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¸\u0003\u0010\u0006R\u0016\u0010¹\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bº\u0003\u0010\u0006R\u0016\u0010»\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¼\u0003\u0010\u0006R\u0016\u0010½\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¾\u0003\u0010\u0006R\u0016\u0010¿\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c0\u0003\u0010\u0006R\u0016\u0010\u00c1\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c2\u0003\u0010\u0006R\u0016\u0010\u00c3\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c4\u0003\u0010\u0006R\u0016\u0010\u00c5\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c6\u0003\u0010\u0006R\u0016\u0010\u00c7\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c8\u0003\u0010\u0006R\u0016\u0010\u00c9\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ca\u0003\u0010\u0006R\u0016\u0010\u00cb\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00cc\u0003\u0010\u0006R\u0016\u0010\u00cd\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ce\u0003\u0010\u0006R\u0016\u0010\u00cf\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d0\u0003\u0010\u0006R\u0016\u0010\u00d1\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d2\u0003\u0010\u0006R\u0016\u0010\u00d3\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d4\u0003\u0010\u0006R\u0016\u0010\u00d5\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d6\u0003\u0010\u0006R\u0016\u0010\u00d7\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d8\u0003\u0010\u0006R\u0016\u0010\u00d9\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00da\u0003\u0010\u0006R\u0016\u0010\u00db\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00dc\u0003\u0010\u0006R\u0016\u0010\u00dd\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00de\u0003\u0010\u0006R\u0016\u0010\u00df\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e0\u0003\u0010\u0006R\u0016\u0010\u00e1\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e2\u0003\u0010\u0006R\u0016\u0010\u00e3\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e4\u0003\u0010\u0006R\u0016\u0010\u00e5\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e6\u0003\u0010\u0006R\u0016\u0010\u00e7\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e8\u0003\u0010\u0006R\u0016\u0010\u00e9\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ea\u0003\u0010\u0006R\u0016\u0010\u00eb\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ec\u0003\u0010\u0006R\u0016\u0010\u00ed\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ee\u0003\u0010\u0006R\u0016\u0010\u00ef\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f0\u0003\u0010\u0006R\u0016\u0010\u00f1\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f2\u0003\u0010\u0006R\u0016\u0010\u00f3\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f4\u0003\u0010\u0006R\u0016\u0010\u00f5\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f6\u0003\u0010\u0006R\u0016\u0010\u00f7\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f8\u0003\u0010\u0006R\u0016\u0010\u00f9\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fa\u0003\u0010\u0006R\u0016\u0010\u00fb\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fc\u0003\u0010\u0006R\u0016\u0010\u00fd\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fe\u0003\u0010\u0006R\u0016\u0010\u00ff\u0003\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0080\u0004\u0010\u0006R\u0016\u0010\u0081\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0082\u0004\u0010\u0006R\u0016\u0010\u0083\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0084\u0004\u0010\u0006R\u0016\u0010\u0085\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0086\u0004\u0010\u0006R\u0016\u0010\u0087\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0088\u0004\u0010\u0006R\u0016\u0010\u0089\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008a\u0004\u0010\u0006R\u0016\u0010\u008b\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008c\u0004\u0010\u0006R\u0016\u0010\u008d\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008e\u0004\u0010\u0006R\u0016\u0010\u008f\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0090\u0004\u0010\u0006R\u0016\u0010\u0091\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0092\u0004\u0010\u0006R\u0016\u0010\u0093\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0094\u0004\u0010\u0006R\u0016\u0010\u0095\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0096\u0004\u0010\u0006R\u0016\u0010\u0097\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0098\u0004\u0010\u0006R\u0016\u0010\u0099\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009a\u0004\u0010\u0006R\u0016\u0010\u009b\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009c\u0004\u0010\u0006R\u0016\u0010\u009d\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009e\u0004\u0010\u0006R\u0016\u0010\u009f\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b \u0004\u0010\u0006R\u0016\u0010¡\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¢\u0004\u0010\u0006R\u0016\u0010£\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¤\u0004\u0010\u0006R\u0016\u0010¥\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¦\u0004\u0010\u0006R\u0016\u0010§\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¨\u0004\u0010\u0006R\u0016\u0010©\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bª\u0004\u0010\u0006R\u0016\u0010«\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¬\u0004\u0010\u0006R\u0016\u0010\u00ad\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b®\u0004\u0010\u0006R\u0016\u0010¯\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b°\u0004\u0010\u0006R\u0016\u0010±\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b²\u0004\u0010\u0006R\u0016\u0010³\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b´\u0004\u0010\u0006R\u0016\u0010µ\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¶\u0004\u0010\u0006R\u0016\u0010·\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¸\u0004\u0010\u0006R\u0016\u0010¹\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bº\u0004\u0010\u0006R\u0016\u0010»\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¼\u0004\u0010\u0006R\u0016\u0010½\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¾\u0004\u0010\u0006R\u0016\u0010¿\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c0\u0004\u0010\u0006R\u0016\u0010\u00c1\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c2\u0004\u0010\u0006R\u0016\u0010\u00c3\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c4\u0004\u0010\u0006R\u0016\u0010\u00c5\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c6\u0004\u0010\u0006R\u0016\u0010\u00c7\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c8\u0004\u0010\u0006R\u0016\u0010\u00c9\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ca\u0004\u0010\u0006R\u0016\u0010\u00cb\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00cc\u0004\u0010\u0006R\u0016\u0010\u00cd\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ce\u0004\u0010\u0006R\u0016\u0010\u00cf\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d0\u0004\u0010\u0006R\u0016\u0010\u00d1\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d2\u0004\u0010\u0006R\u0016\u0010\u00d3\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d4\u0004\u0010\u0006R\u0016\u0010\u00d5\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d6\u0004\u0010\u0006R\u0016\u0010\u00d7\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d8\u0004\u0010\u0006R\u0016\u0010\u00d9\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00da\u0004\u0010\u0006R\u0016\u0010\u00db\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00dc\u0004\u0010\u0006R\u0016\u0010\u00dd\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00de\u0004\u0010\u0006R\u0016\u0010\u00df\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e0\u0004\u0010\u0006R\u0016\u0010\u00e1\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e2\u0004\u0010\u0006R\u0016\u0010\u00e3\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e4\u0004\u0010\u0006R\u0016\u0010\u00e5\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e6\u0004\u0010\u0006R\u0016\u0010\u00e7\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e8\u0004\u0010\u0006R\u0016\u0010\u00e9\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ea\u0004\u0010\u0006R\u0016\u0010\u00eb\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ec\u0004\u0010\u0006R\u0016\u0010\u00ed\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ee\u0004\u0010\u0006R\u0016\u0010\u00ef\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f0\u0004\u0010\u0006R\u0016\u0010\u00f1\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f2\u0004\u0010\u0006R\u0016\u0010\u00f3\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f4\u0004\u0010\u0006R\u0016\u0010\u00f5\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f6\u0004\u0010\u0006R\u0016\u0010\u00f7\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f8\u0004\u0010\u0006R\u0016\u0010\u00f9\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fa\u0004\u0010\u0006R\u0016\u0010\u00fb\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fc\u0004\u0010\u0006R\u0016\u0010\u00fd\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fe\u0004\u0010\u0006R\u0016\u0010\u00ff\u0004\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0080\u0005\u0010\u0006R\u0016\u0010\u0081\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0082\u0005\u0010\u0006R\u0016\u0010\u0083\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0084\u0005\u0010\u0006R\u0016\u0010\u0085\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0086\u0005\u0010\u0006R\u0016\u0010\u0087\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0088\u0005\u0010\u0006R\u0016\u0010\u0089\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008a\u0005\u0010\u0006R\u0016\u0010\u008b\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008c\u0005\u0010\u0006R\u0016\u0010\u008d\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008e\u0005\u0010\u0006R\u0016\u0010\u008f\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0090\u0005\u0010\u0006R\u0016\u0010\u0091\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0092\u0005\u0010\u0006R\u0016\u0010\u0093\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0094\u0005\u0010\u0006R\u0016\u0010\u0095\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0096\u0005\u0010\u0006R\u0016\u0010\u0097\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0098\u0005\u0010\u0006R\u0016\u0010\u0099\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009a\u0005\u0010\u0006R\u0016\u0010\u009b\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009c\u0005\u0010\u0006R\u0016\u0010\u009d\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009e\u0005\u0010\u0006R\u0016\u0010\u009f\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b \u0005\u0010\u0006R\u0016\u0010¡\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¢\u0005\u0010\u0006R\u0016\u0010£\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¤\u0005\u0010\u0006R\u0016\u0010¥\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¦\u0005\u0010\u0006R\u0016\u0010§\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¨\u0005\u0010\u0006R\u0016\u0010©\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bª\u0005\u0010\u0006R\u0016\u0010«\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¬\u0005\u0010\u0006R\u0016\u0010\u00ad\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b®\u0005\u0010\u0006R\u0016\u0010¯\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b°\u0005\u0010\u0006R\u0016\u0010±\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b²\u0005\u0010\u0006R\u0016\u0010³\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b´\u0005\u0010\u0006R\u0016\u0010µ\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¶\u0005\u0010\u0006R\u0016\u0010·\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¸\u0005\u0010\u0006R\u0016\u0010¹\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bº\u0005\u0010\u0006R\u0016\u0010»\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¼\u0005\u0010\u0006R\u0016\u0010½\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¾\u0005\u0010\u0006R\u0016\u0010¿\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c0\u0005\u0010\u0006R\u0016\u0010\u00c1\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c2\u0005\u0010\u0006R\u0016\u0010\u00c3\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c4\u0005\u0010\u0006R\u0016\u0010\u00c5\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c6\u0005\u0010\u0006R\u0016\u0010\u00c7\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c8\u0005\u0010\u0006R\u0016\u0010\u00c9\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ca\u0005\u0010\u0006R\u0016\u0010\u00cb\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00cc\u0005\u0010\u0006R\u0016\u0010\u00cd\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ce\u0005\u0010\u0006R\u0016\u0010\u00cf\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d0\u0005\u0010\u0006R\u0016\u0010\u00d1\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d2\u0005\u0010\u0006R\u0016\u0010\u00d3\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d4\u0005\u0010\u0006R\u0016\u0010\u00d5\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d6\u0005\u0010\u0006R\u0016\u0010\u00d7\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d8\u0005\u0010\u0006R\u0016\u0010\u00d9\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00da\u0005\u0010\u0006R\u0016\u0010\u00db\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00dc\u0005\u0010\u0006R\u0016\u0010\u00dd\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00de\u0005\u0010\u0006R\u0016\u0010\u00df\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e0\u0005\u0010\u0006R\u0016\u0010\u00e1\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e2\u0005\u0010\u0006R\u0016\u0010\u00e3\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e4\u0005\u0010\u0006R\u0016\u0010\u00e5\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e6\u0005\u0010\u0006R\u0016\u0010\u00e7\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e8\u0005\u0010\u0006R\u0016\u0010\u00e9\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ea\u0005\u0010\u0006R\u0016\u0010\u00eb\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ec\u0005\u0010\u0006R\u0016\u0010\u00ed\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ee\u0005\u0010\u0006R\u0016\u0010\u00ef\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f0\u0005\u0010\u0006R\u0016\u0010\u00f1\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f2\u0005\u0010\u0006R\u0016\u0010\u00f3\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f4\u0005\u0010\u0006R\u0016\u0010\u00f5\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f6\u0005\u0010\u0006R\u0016\u0010\u00f7\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f8\u0005\u0010\u0006R\u0016\u0010\u00f9\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fa\u0005\u0010\u0006R\u0016\u0010\u00fb\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fc\u0005\u0010\u0006R\u0016\u0010\u00fd\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fe\u0005\u0010\u0006R\u0016\u0010\u00ff\u0005\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0080\u0006\u0010\u0006R\u0016\u0010\u0081\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0082\u0006\u0010\u0006R\u0016\u0010\u0083\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0084\u0006\u0010\u0006R\u0016\u0010\u0085\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0086\u0006\u0010\u0006R\u0016\u0010\u0087\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0088\u0006\u0010\u0006R\u0016\u0010\u0089\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008a\u0006\u0010\u0006R\u0016\u0010\u008b\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008c\u0006\u0010\u0006R\u0016\u0010\u008d\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008e\u0006\u0010\u0006R\u0016\u0010\u008f\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0090\u0006\u0010\u0006R\u0016\u0010\u0091\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0092\u0006\u0010\u0006R\u0016\u0010\u0093\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0094\u0006\u0010\u0006R\u0016\u0010\u0095\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0096\u0006\u0010\u0006R\u0016\u0010\u0097\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0098\u0006\u0010\u0006R\u0016\u0010\u0099\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009a\u0006\u0010\u0006R\u0016\u0010\u009b\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009c\u0006\u0010\u0006R\u0016\u0010\u009d\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009e\u0006\u0010\u0006R\u0016\u0010\u009f\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b \u0006\u0010\u0006R\u0016\u0010¡\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¢\u0006\u0010\u0006R\u0016\u0010£\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¤\u0006\u0010\u0006R\u0016\u0010¥\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¦\u0006\u0010\u0006R\u0016\u0010§\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¨\u0006\u0010\u0006R\u0016\u0010©\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bª\u0006\u0010\u0006R\u0016\u0010«\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¬\u0006\u0010\u0006R\u0016\u0010\u00ad\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b®\u0006\u0010\u0006R\u0016\u0010¯\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b°\u0006\u0010\u0006R\u0016\u0010±\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b²\u0006\u0010\u0006R\u0016\u0010³\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b´\u0006\u0010\u0006R\u0016\u0010µ\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¶\u0006\u0010\u0006R\u0016\u0010·\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¸\u0006\u0010\u0006R\u0016\u0010¹\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bº\u0006\u0010\u0006R\u0016\u0010»\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¼\u0006\u0010\u0006R\u0016\u0010½\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¾\u0006\u0010\u0006R\u0016\u0010¿\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c0\u0006\u0010\u0006R\u0016\u0010\u00c1\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c2\u0006\u0010\u0006R\u0016\u0010\u00c3\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c4\u0006\u0010\u0006R\u0016\u0010\u00c5\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c6\u0006\u0010\u0006R\u0016\u0010\u00c7\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c8\u0006\u0010\u0006R\u0016\u0010\u00c9\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ca\u0006\u0010\u0006R\u0016\u0010\u00cb\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00cc\u0006\u0010\u0006R\u0016\u0010\u00cd\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ce\u0006\u0010\u0006R\u0016\u0010\u00cf\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d0\u0006\u0010\u0006R\u0016\u0010\u00d1\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d2\u0006\u0010\u0006R\u0016\u0010\u00d3\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d4\u0006\u0010\u0006R\u0016\u0010\u00d5\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d6\u0006\u0010\u0006R\u0016\u0010\u00d7\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d8\u0006\u0010\u0006R\u0016\u0010\u00d9\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00da\u0006\u0010\u0006R\u0016\u0010\u00db\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00dc\u0006\u0010\u0006R\u0016\u0010\u00dd\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00de\u0006\u0010\u0006R\u0016\u0010\u00df\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e0\u0006\u0010\u0006R\u0016\u0010\u00e1\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e2\u0006\u0010\u0006R\u0016\u0010\u00e3\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e4\u0006\u0010\u0006R\u0016\u0010\u00e5\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e6\u0006\u0010\u0006R\u0016\u0010\u00e7\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e8\u0006\u0010\u0006R\u0016\u0010\u00e9\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ea\u0006\u0010\u0006R\u0016\u0010\u00eb\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ec\u0006\u0010\u0006R\u0016\u0010\u00ed\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ee\u0006\u0010\u0006R\u0016\u0010\u00ef\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f0\u0006\u0010\u0006R\u0016\u0010\u00f1\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f2\u0006\u0010\u0006R\u0016\u0010\u00f3\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f4\u0006\u0010\u0006R\u0016\u0010\u00f5\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f6\u0006\u0010\u0006R\u0016\u0010\u00f7\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f8\u0006\u0010\u0006R\u0016\u0010\u00f9\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fa\u0006\u0010\u0006R\u0016\u0010\u00fb\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fc\u0006\u0010\u0006R\u0016\u0010\u00fd\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fe\u0006\u0010\u0006R\u0016\u0010\u00ff\u0006\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0080\u0007\u0010\u0006R\u0016\u0010\u0081\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0082\u0007\u0010\u0006R\u0016\u0010\u0083\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0084\u0007\u0010\u0006R\u0016\u0010\u0085\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0086\u0007\u0010\u0006R\u0016\u0010\u0087\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0088\u0007\u0010\u0006R\u0016\u0010\u0089\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008a\u0007\u0010\u0006R\u0016\u0010\u008b\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008c\u0007\u0010\u0006R\u0016\u0010\u008d\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008e\u0007\u0010\u0006R\u0016\u0010\u008f\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0090\u0007\u0010\u0006R\u0016\u0010\u0091\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0092\u0007\u0010\u0006R\u0016\u0010\u0093\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0094\u0007\u0010\u0006R\u0016\u0010\u0095\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0096\u0007\u0010\u0006R\u0016\u0010\u0097\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0098\u0007\u0010\u0006R\u0016\u0010\u0099\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009a\u0007\u0010\u0006R\u0016\u0010\u009b\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009c\u0007\u0010\u0006R\u0016\u0010\u009d\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009e\u0007\u0010\u0006R\u0016\u0010\u009f\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b \u0007\u0010\u0006R\u0016\u0010¡\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¢\u0007\u0010\u0006R\u0016\u0010£\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¤\u0007\u0010\u0006R\u0016\u0010¥\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¦\u0007\u0010\u0006R\u0016\u0010§\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¨\u0007\u0010\u0006R\u0016\u0010©\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bª\u0007\u0010\u0006R\u0016\u0010«\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¬\u0007\u0010\u0006R\u0016\u0010\u00ad\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b®\u0007\u0010\u0006R\u0016\u0010¯\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b°\u0007\u0010\u0006R\u0016\u0010±\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b²\u0007\u0010\u0006R\u0016\u0010³\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b´\u0007\u0010\u0006R\u0016\u0010µ\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¶\u0007\u0010\u0006R\u0016\u0010·\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¸\u0007\u0010\u0006R\u0016\u0010¹\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bº\u0007\u0010\u0006R\u0016\u0010»\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¼\u0007\u0010\u0006R\u0016\u0010½\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¾\u0007\u0010\u0006R\u0016\u0010¿\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c0\u0007\u0010\u0006R\u0016\u0010\u00c1\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c2\u0007\u0010\u0006R\u0016\u0010\u00c3\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c4\u0007\u0010\u0006R\u0016\u0010\u00c5\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c6\u0007\u0010\u0006R\u0016\u0010\u00c7\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00c8\u0007\u0010\u0006R\u0016\u0010\u00c9\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ca\u0007\u0010\u0006R\u0016\u0010\u00cb\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00cc\u0007\u0010\u0006R\u0016\u0010\u00cd\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ce\u0007\u0010\u0006R\u0016\u0010\u00cf\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d0\u0007\u0010\u0006R\u0016\u0010\u00d1\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d2\u0007\u0010\u0006R\u0016\u0010\u00d3\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d4\u0007\u0010\u0006R\u0016\u0010\u00d5\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d6\u0007\u0010\u0006R\u0016\u0010\u00d7\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00d8\u0007\u0010\u0006R\u0016\u0010\u00d9\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00da\u0007\u0010\u0006R\u0016\u0010\u00db\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00dc\u0007\u0010\u0006R\u0016\u0010\u00dd\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00de\u0007\u0010\u0006R\u0016\u0010\u00df\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e0\u0007\u0010\u0006R\u0016\u0010\u00e1\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e2\u0007\u0010\u0006R\u0016\u0010\u00e3\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e4\u0007\u0010\u0006R\u0016\u0010\u00e5\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e6\u0007\u0010\u0006R\u0016\u0010\u00e7\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00e8\u0007\u0010\u0006R\u0016\u0010\u00e9\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ea\u0007\u0010\u0006R\u0016\u0010\u00eb\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ec\u0007\u0010\u0006R\u0016\u0010\u00ed\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00ee\u0007\u0010\u0006R\u0016\u0010\u00ef\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f0\u0007\u0010\u0006R\u0016\u0010\u00f1\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f2\u0007\u0010\u0006R\u0016\u0010\u00f3\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f4\u0007\u0010\u0006R\u0016\u0010\u00f5\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f6\u0007\u0010\u0006R\u0016\u0010\u00f7\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00f8\u0007\u0010\u0006R\u0016\u0010\u00f9\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fa\u0007\u0010\u0006R\u0016\u0010\u00fb\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fc\u0007\u0010\u0006R\u0016\u0010\u00fd\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u00fe\u0007\u0010\u0006R\u0016\u0010\u00ff\u0007\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0080\b\u0010\u0006R\u0016\u0010\u0081\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0082\b\u0010\u0006R\u0016\u0010\u0083\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0084\b\u0010\u0006R\u0016\u0010\u0085\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0086\b\u0010\u0006R\u0016\u0010\u0087\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0088\b\u0010\u0006R\u0016\u0010\u0089\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008a\b\u0010\u0006R\u0016\u0010\u008b\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008c\b\u0010\u0006R\u0016\u0010\u008d\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u008e\b\u0010\u0006R\u0016\u0010\u008f\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0090\b\u0010\u0006R\u0016\u0010\u0091\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0092\b\u0010\u0006R\u0016\u0010\u0093\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0094\b\u0010\u0006R\u0016\u0010\u0095\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0096\b\u0010\u0006R\u0016\u0010\u0097\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u0098\b\u0010\u0006R\u0016\u0010\u0099\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009a\b\u0010\u0006R\u0016\u0010\u009b\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009c\b\u0010\u0006R\u0016\u0010\u009d\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b\u009e\b\u0010\u0006R\u0016\u0010\u009f\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b \b\u0010\u0006R\u0016\u0010¡\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¢\b\u0010\u0006R\u0016\u0010£\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¤\b\u0010\u0006R\u0016\u0010¥\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¦\b\u0010\u0006R\u0016\u0010§\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¨\b\u0010\u0006R\u0016\u0010©\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\bª\b\u0010\u0006R\u0016\u0010«\b\u001a\u00020\u0004X\u0086D¢\u0006\t\n\u0000\u001a\u0005\b¬\b\u0010\u0006¨\u0006\u00db\b" }, d2 = { "Lme/alpha432/stay/util/graphics/opengl/dsl/OpenGLBuilder;", "", "()V", "ACCUM", "", "getACCUM", "()I", "ACCUM_ALPHA_BITS", "getACCUM_ALPHA_BITS", "ACCUM_BLUE_BITS", "getACCUM_BLUE_BITS", "ACCUM_BUFFER_BIT", "getACCUM_BUFFER_BIT", "ACCUM_CLEAR_VALUE", "getACCUM_CLEAR_VALUE", "ACCUM_GREEN_BITS", "getACCUM_GREEN_BITS", "ACCUM_RED_BITS", "getACCUM_RED_BITS", "ADD", "getADD", "ALL_ATTRIB_BITS", "getALL_ATTRIB_BITS", "ALL_CLIENT_ATTRIB_BITS", "getALL_CLIENT_ATTRIB_BITS", "ALPHA", "getALPHA", "ALPHA12", "getALPHA12", "ALPHA16", "getALPHA16", "ALPHA4", "getALPHA4", "ALPHA8", "getALPHA8", "ALPHA_BIAS", "getALPHA_BIAS", "ALPHA_BITS", "getALPHA_BITS", "ALPHA_SCALE", "getALPHA_SCALE", "ALPHA_TEST", "getALPHA_TEST", "ALPHA_TEST_FUNC", "getALPHA_TEST_FUNC", "ALPHA_TEST_REF", "getALPHA_TEST_REF", "ALWAYS", "getALWAYS", "AMBIENT", "getAMBIENT", "AMBIENT_AND_DIFFUSE", "getAMBIENT_AND_DIFFUSE", "AND", "getAND", "AND_INVERTED", "getAND_INVERTED", "AND_REVERSE", "getAND_REVERSE", "ATTRIB_STACK_DEPTH", "getATTRIB_STACK_DEPTH", "AUTO_NORMAL", "getAUTO_NORMAL", "AUX0", "getAUX0", "AUX1", "getAUX1", "AUX2", "getAUX2", "AUX3", "getAUX3", "AUX_BUFFERS", "getAUX_BUFFERS", "BACK", "getBACK", "BACK_LEFT", "getBACK_LEFT", "BACK_RIGHT", "getBACK_RIGHT", "BITMAP", "getBITMAP", "BITMAP_TOKEN", "getBITMAP_TOKEN", "BLEND", "getBLEND", "BLEND_DST", "getBLEND_DST", "BLEND_SRC", "getBLEND_SRC", "BLUE", "getBLUE", "BLUE_BIAS", "getBLUE_BIAS", "BLUE_BITS", "getBLUE_BITS", "BLUE_SCALE", "getBLUE_SCALE", "BYTE", "getBYTE", "C3F_V3F", "getC3F_V3F", "C4F_N3F_V3F", "getC4F_N3F_V3F", "C4UB_V2F", "getC4UB_V2F", "C4UB_V3F", "getC4UB_V3F", "CCW", "getCCW", "CLAMP", "getCLAMP", "CLEAR", "getCLEAR", "CLIENT_ATTRIB_STACK_DEPTH", "getCLIENT_ATTRIB_STACK_DEPTH", "CLIENT_PIXEL_STORE_BIT", "getCLIENT_PIXEL_STORE_BIT", "CLIENT_VERTEX_ARRAY_BIT", "getCLIENT_VERTEX_ARRAY_BIT", "CLIP_PLANE0", "getCLIP_PLANE0", "CLIP_PLANE1", "getCLIP_PLANE1", "CLIP_PLANE2", "getCLIP_PLANE2", "CLIP_PLANE3", "getCLIP_PLANE3", "CLIP_PLANE4", "getCLIP_PLANE4", "CLIP_PLANE5", "getCLIP_PLANE5", "COEFF", "getCOEFF", "COLOR", "getCOLOR", "COLOR_ARRAY", "getCOLOR_ARRAY", "COLOR_ARRAY_POINTER", "getCOLOR_ARRAY_POINTER", "COLOR_ARRAY_SIZE", "getCOLOR_ARRAY_SIZE", "COLOR_ARRAY_STRIDE", "getCOLOR_ARRAY_STRIDE", "COLOR_ARRAY_TYPE", "getCOLOR_ARRAY_TYPE", "COLOR_BUFFER_BIT", "getCOLOR_BUFFER_BIT", "COLOR_CLEAR_VALUE", "getCOLOR_CLEAR_VALUE", "COLOR_INDEX", "getCOLOR_INDEX", "COLOR_INDEXES", "getCOLOR_INDEXES", "COLOR_LOGIC_OP", "getCOLOR_LOGIC_OP", "COLOR_MATERIAL", "getCOLOR_MATERIAL", "COLOR_MATERIAL_FACE", "getCOLOR_MATERIAL_FACE", "COLOR_MATERIAL_PARAMETER", "getCOLOR_MATERIAL_PARAMETER", "COLOR_WRITEMASK", "getCOLOR_WRITEMASK", "COMPILE", "getCOMPILE", "COMPILE_AND_EXECUTE", "getCOMPILE_AND_EXECUTE", "CONSTANT_ALPHA", "getCONSTANT_ALPHA", "CONSTANT_ATTENUATION", "getCONSTANT_ATTENUATION", "CONSTANT_COLOR", "getCONSTANT_COLOR", "COPY", "getCOPY", "COPY_INVERTED", "getCOPY_INVERTED", "COPY_PIXEL_TOKEN", "getCOPY_PIXEL_TOKEN", "CULL_FACE", "getCULL_FACE", "CULL_FACE_MODE", "getCULL_FACE_MODE", "CURRENT_BIT", "getCURRENT_BIT", "CURRENT_COLOR", "getCURRENT_COLOR", "CURRENT_INDEX", "getCURRENT_INDEX", "CURRENT_NORMAL", "getCURRENT_NORMAL", "CURRENT_RASTER_COLOR", "getCURRENT_RASTER_COLOR", "CURRENT_RASTER_DISTANCE", "getCURRENT_RASTER_DISTANCE", "CURRENT_RASTER_INDEX", "getCURRENT_RASTER_INDEX", "CURRENT_RASTER_POSITION", "getCURRENT_RASTER_POSITION", "CURRENT_RASTER_POSITION_VALID", "getCURRENT_RASTER_POSITION_VALID", "CURRENT_RASTER_TEXTURE_COORDS", "getCURRENT_RASTER_TEXTURE_COORDS", "CURRENT_TEXTURE_COORDS", "getCURRENT_TEXTURE_COORDS", "CW", "getCW", "DECAL", "getDECAL", "DECR", "getDECR", "DEPTH", "getDEPTH", "DEPTH_BIAS", "getDEPTH_BIAS", "DEPTH_BITS", "getDEPTH_BITS", "DEPTH_BUFFER_BIT", "getDEPTH_BUFFER_BIT", "DEPTH_CLEAR_VALUE", "getDEPTH_CLEAR_VALUE", "DEPTH_COMPONENT", "getDEPTH_COMPONENT", "DEPTH_FUNC", "getDEPTH_FUNC", "DEPTH_RANGE", "getDEPTH_RANGE", "DEPTH_SCALE", "getDEPTH_SCALE", "DEPTH_TEST", "getDEPTH_TEST", "DEPTH_WRITEMASK", "getDEPTH_WRITEMASK", "DIFFUSE", "getDIFFUSE", "DITHER", "getDITHER", "DOMAIN", "getDOMAIN", "DONT_CARE", "getDONT_CARE", "DOUBLE", "getDOUBLE", "DOUBLEBUFFER", "getDOUBLEBUFFER", "DRAW_BUFFER", "getDRAW_BUFFER", "DRAW_PIXEL_TOKEN", "getDRAW_PIXEL_TOKEN", "DST_ALPHA", "getDST_ALPHA", "DST_COLOR", "getDST_COLOR", "EDGE_FLAG", "getEDGE_FLAG", "EDGE_FLAG_ARRAY", "getEDGE_FLAG_ARRAY", "EDGE_FLAG_ARRAY_POINTER", "getEDGE_FLAG_ARRAY_POINTER", "EDGE_FLAG_ARRAY_STRIDE", "getEDGE_FLAG_ARRAY_STRIDE", "EMISSION", "getEMISSION", "ENABLE_BIT", "getENABLE_BIT", "EQUAL", "getEQUAL", "EQUIV", "getEQUIV", "EVAL_BIT", "getEVAL_BIT", "EXP", "getEXP", "EXP2", "getEXP2", "EXTENSIONS", "getEXTENSIONS", "EYE_LINEAR", "getEYE_LINEAR", "EYE_PLANE", "getEYE_PLANE", "FALSE", "getFALSE", "FASTEST", "getFASTEST", "FEEDBACK", "getFEEDBACK", "FEEDBACK_BUFFER_POINTER", "getFEEDBACK_BUFFER_POINTER", "FEEDBACK_BUFFER_SIZE", "getFEEDBACK_BUFFER_SIZE", "FEEDBACK_BUFFER_TYPE", "getFEEDBACK_BUFFER_TYPE", "FILL", "getFILL", "FLAT", "getFLAT", "FLOAT", "getFLOAT", "FOG", "getFOG", "FOG_BIT", "getFOG_BIT", "FOG_COLOR", "getFOG_COLOR", "FOG_DENSITY", "getFOG_DENSITY", "FOG_END", "getFOG_END", "FOG_HINT", "getFOG_HINT", "FOG_INDEX", "getFOG_INDEX", "FOG_MODE", "getFOG_MODE", "FOG_START", "getFOG_START", "FRONT", "getFRONT", "FRONT_AND_BACK", "getFRONT_AND_BACK", "FRONT_FACE", "getFRONT_FACE", "FRONT_LEFT", "getFRONT_LEFT", "FRONT_RIGHT", "getFRONT_RIGHT", "GEQUAL", "getGEQUAL", "GL_2D", "getGL_2D", "GL_2_BYTES", "getGL_2_BYTES", "GL_3D", "getGL_3D", "GL_3D_COLOR", "getGL_3D_COLOR", "GL_3D_COLOR_TEXTURE", "getGL_3D_COLOR_TEXTURE", "GL_3_BYTES", "getGL_3_BYTES", "GL_4D_COLOR_TEXTURE", "getGL_4D_COLOR_TEXTURE", "GL_4_BYTES", "getGL_4_BYTES", "GREATER", "getGREATER", "GREEN", "getGREEN", "GREEN_BIAS", "getGREEN_BIAS", "GREEN_BITS", "getGREEN_BITS", "GREEN_SCALE", "getGREEN_SCALE", "HINT_BIT", "getHINT_BIT", "INCR", "getINCR", "INDEX_ARRAY", "getINDEX_ARRAY", "INDEX_ARRAY_POINTER", "getINDEX_ARRAY_POINTER", "INDEX_ARRAY_STRIDE", "getINDEX_ARRAY_STRIDE", "INDEX_ARRAY_TYPE", "getINDEX_ARRAY_TYPE", "INDEX_BITS", "getINDEX_BITS", "INDEX_CLEAR_VALUE", "getINDEX_CLEAR_VALUE", "INDEX_LOGIC_OP", "getINDEX_LOGIC_OP", "INDEX_MODE", "getINDEX_MODE", "INDEX_OFFSET", "getINDEX_OFFSET", "INDEX_SHIFT", "getINDEX_SHIFT", "INDEX_WRITEMASK", "getINDEX_WRITEMASK", "INT", "getINT", "INTENSITY", "getINTENSITY", "INTENSITY12", "getINTENSITY12", "INTENSITY16", "getINTENSITY16", "INTENSITY4", "getINTENSITY4", "INTENSITY8", "getINTENSITY8", "INVALID_ENUM", "getINVALID_ENUM", "INVALID_OPERATION", "getINVALID_OPERATION", "INVALID_VALUE", "getINVALID_VALUE", "INVERT", "getINVERT", "KEEP", "getKEEP", "LEFT", "getLEFT", "LEQUAL", "getLEQUAL", "LESS", "getLESS", "LIGHT0", "getLIGHT0", "LIGHT1", "getLIGHT1", "LIGHT2", "getLIGHT2", "LIGHT3", "getLIGHT3", "LIGHT4", "getLIGHT4", "LIGHT5", "getLIGHT5", "LIGHT6", "getLIGHT6", "LIGHT7", "getLIGHT7", "LIGHTING", "getLIGHTING", "LIGHTING_BIT", "getLIGHTING_BIT", "LIGHT_MODEL_AMBIENT", "getLIGHT_MODEL_AMBIENT", "LIGHT_MODEL_LOCAL_VIEWER", "getLIGHT_MODEL_LOCAL_VIEWER", "LIGHT_MODEL_TWO_SIDE", "getLIGHT_MODEL_TWO_SIDE", "LINE", "getLINE", "LINEAR", "getLINEAR", "LINEAR_ATTENUATION", "getLINEAR_ATTENUATION", "LINEAR_MIPMAP_LINEAR", "getLINEAR_MIPMAP_LINEAR", "LINEAR_MIPMAP_NEAREST", "getLINEAR_MIPMAP_NEAREST", "LINES", "getLINES", "LINE_BIT", "getLINE_BIT", "LINE_LOOP", "getLINE_LOOP", "LINE_RESET_TOKEN", "getLINE_RESET_TOKEN", "LINE_SMOOTH", "getLINE_SMOOTH", "LINE_SMOOTH_HINT", "getLINE_SMOOTH_HINT", "LINE_STIPPLE", "getLINE_STIPPLE", "LINE_STIPPLE_PATTERN", "getLINE_STIPPLE_PATTERN", "LINE_STIPPLE_REPEAT", "getLINE_STIPPLE_REPEAT", "LINE_STRIP", "getLINE_STRIP", "LINE_TOKEN", "getLINE_TOKEN", "LINE_WIDTH", "getLINE_WIDTH", "LINE_WIDTH_GRANULARITY", "getLINE_WIDTH_GRANULARITY", "LINE_WIDTH_RANGE", "getLINE_WIDTH_RANGE", "LIST_BASE", "getLIST_BASE", "LIST_BIT", "getLIST_BIT", "LIST_INDEX", "getLIST_INDEX", "LIST_MODE", "getLIST_MODE", "LOAD", "getLOAD", "LOGIC_OP", "getLOGIC_OP", "LOGIC_OP_MODE", "getLOGIC_OP_MODE", "LUMINANCE", "getLUMINANCE", "LUMINANCE12", "getLUMINANCE12", "LUMINANCE12_ALPHA12", "getLUMINANCE12_ALPHA12", "LUMINANCE12_ALPHA4", "getLUMINANCE12_ALPHA4", "LUMINANCE16", "getLUMINANCE16", "LUMINANCE16_ALPHA16", "getLUMINANCE16_ALPHA16", "LUMINANCE4", "getLUMINANCE4", "LUMINANCE4_ALPHA4", "getLUMINANCE4_ALPHA4", "LUMINANCE6_ALPHA2", "getLUMINANCE6_ALPHA2", "LUMINANCE8", "getLUMINANCE8", "LUMINANCE8_ALPHA8", "getLUMINANCE8_ALPHA8", "LUMINANCE_ALPHA", "getLUMINANCE_ALPHA", "MAP1_COLOR_4", "getMAP1_COLOR_4", "MAP1_GRID_DOMAIN", "getMAP1_GRID_DOMAIN", "MAP1_GRID_SEGMENTS", "getMAP1_GRID_SEGMENTS", "MAP1_INDEX", "getMAP1_INDEX", "MAP1_NORMAL", "getMAP1_NORMAL", "MAP1_TEXTURE_COORD_1", "getMAP1_TEXTURE_COORD_1", "MAP1_TEXTURE_COORD_2", "getMAP1_TEXTURE_COORD_2", "MAP1_TEXTURE_COORD_3", "getMAP1_TEXTURE_COORD_3", "MAP1_TEXTURE_COORD_4", "getMAP1_TEXTURE_COORD_4", "MAP1_VERTEX_3", "getMAP1_VERTEX_3", "MAP1_VERTEX_4", "getMAP1_VERTEX_4", "MAP2_COLOR_4", "getMAP2_COLOR_4", "MAP2_GRID_DOMAIN", "getMAP2_GRID_DOMAIN", "MAP2_GRID_SEGMENTS", "getMAP2_GRID_SEGMENTS", "MAP2_INDEX", "getMAP2_INDEX", "MAP2_NORMAL", "getMAP2_NORMAL", "MAP2_TEXTURE_COORD_1", "getMAP2_TEXTURE_COORD_1", "MAP2_TEXTURE_COORD_2", "getMAP2_TEXTURE_COORD_2", "MAP2_TEXTURE_COORD_3", "getMAP2_TEXTURE_COORD_3", "MAP2_TEXTURE_COORD_4", "getMAP2_TEXTURE_COORD_4", "MAP2_VERTEX_3", "getMAP2_VERTEX_3", "MAP2_VERTEX_4", "getMAP2_VERTEX_4", "MAP_COLOR", "getMAP_COLOR", "MAP_STENCIL", "getMAP_STENCIL", "MATRIX_MODE", "getMATRIX_MODE", "MAX_ATTRIB_STACK_DEPTH", "getMAX_ATTRIB_STACK_DEPTH", "MAX_CLIENT_ATTRIB_STACK_DEPTH", "getMAX_CLIENT_ATTRIB_STACK_DEPTH", "MAX_CLIP_PLANES", "getMAX_CLIP_PLANES", "MAX_EVAL_ORDER", "getMAX_EVAL_ORDER", "MAX_LIGHTS", "getMAX_LIGHTS", "MAX_LIST_NESTING", "getMAX_LIST_NESTING", "MAX_MODELVIEW_STACK_DEPTH", "getMAX_MODELVIEW_STACK_DEPTH", "MAX_NAME_STACK_DEPTH", "getMAX_NAME_STACK_DEPTH", "MAX_PIXEL_MAP_TABLE", "getMAX_PIXEL_MAP_TABLE", "MAX_PROJECTION_STACK_DEPTH", "getMAX_PROJECTION_STACK_DEPTH", "MAX_TEXTURE_SIZE", "getMAX_TEXTURE_SIZE", "MAX_TEXTURE_STACK_DEPTH", "getMAX_TEXTURE_STACK_DEPTH", "MAX_VIEWPORT_DIMS", "getMAX_VIEWPORT_DIMS", "MODELVIEW", "getMODELVIEW", "MODELVIEW_MATRIX", "getMODELVIEW_MATRIX", "MODELVIEW_STACK_DEPTH", "getMODELVIEW_STACK_DEPTH", "MODULATE", "getMODULATE", "MULT", "getMULT", "N3F_V3F", "getN3F_V3F", "NAME_STACK_DEPTH", "getNAME_STACK_DEPTH", "NAND", "getNAND", "NEAREST", "getNEAREST", "NEAREST_MIPMAP_LINEAR", "getNEAREST_MIPMAP_LINEAR", "NEAREST_MIPMAP_NEAREST", "getNEAREST_MIPMAP_NEAREST", "NEVER", "getNEVER", "NICEST", "getNICEST", "NONE", "getNONE", "NOOP", "getNOOP", "NOR", "getNOR", "NORMALIZE", "getNORMALIZE", "NORMAL_ARRAY", "getNORMAL_ARRAY", "NORMAL_ARRAY_POINTER", "getNORMAL_ARRAY_POINTER", "NORMAL_ARRAY_STRIDE", "getNORMAL_ARRAY_STRIDE", "NORMAL_ARRAY_TYPE", "getNORMAL_ARRAY_TYPE", "NOTEQUAL", "getNOTEQUAL", "NO_ERROR", "getNO_ERROR", "OBJECT_LINEAR", "getOBJECT_LINEAR", "OBJECT_PLANE", "getOBJECT_PLANE", "ONE", "getONE", "ONE_MINUS_CONSTANT_ALPHA", "getONE_MINUS_CONSTANT_ALPHA", "ONE_MINUS_CONSTANT_COLOR", "getONE_MINUS_CONSTANT_COLOR", "ONE_MINUS_DST_ALPHA", "getONE_MINUS_DST_ALPHA", "ONE_MINUS_DST_COLOR", "getONE_MINUS_DST_COLOR", "ONE_MINUS_SRC_ALPHA", "getONE_MINUS_SRC_ALPHA", "ONE_MINUS_SRC_COLOR", "getONE_MINUS_SRC_COLOR", "OR", "getOR", "ORDER", "getORDER", "OR_INVERTED", "getOR_INVERTED", "OR_REVERSE", "getOR_REVERSE", "OUT_OF_MEMORY", "getOUT_OF_MEMORY", "PACK_ALIGNMENT", "getPACK_ALIGNMENT", "PACK_LSB_FIRST", "getPACK_LSB_FIRST", "PACK_ROW_LENGTH", "getPACK_ROW_LENGTH", "PACK_SKIP_PIXELS", "getPACK_SKIP_PIXELS", "PACK_SKIP_ROWS", "getPACK_SKIP_ROWS", "PACK_SWAP_BYTES", "getPACK_SWAP_BYTES", "PASS_THROUGH_TOKEN", "getPASS_THROUGH_TOKEN", "PERSPECTIVE_CORRECTION_HINT", "getPERSPECTIVE_CORRECTION_HINT", "PIXEL_MAP_A_TO_A", "getPIXEL_MAP_A_TO_A", "PIXEL_MAP_A_TO_A_SIZE", "getPIXEL_MAP_A_TO_A_SIZE", "PIXEL_MAP_B_TO_B", "getPIXEL_MAP_B_TO_B", "PIXEL_MAP_B_TO_B_SIZE", "getPIXEL_MAP_B_TO_B_SIZE", "PIXEL_MAP_G_TO_G", "getPIXEL_MAP_G_TO_G", "PIXEL_MAP_G_TO_G_SIZE", "getPIXEL_MAP_G_TO_G_SIZE", "PIXEL_MAP_I_TO_A", "getPIXEL_MAP_I_TO_A", "PIXEL_MAP_I_TO_A_SIZE", "getPIXEL_MAP_I_TO_A_SIZE", "PIXEL_MAP_I_TO_B", "getPIXEL_MAP_I_TO_B", "PIXEL_MAP_I_TO_B_SIZE", "getPIXEL_MAP_I_TO_B_SIZE", "PIXEL_MAP_I_TO_G", "getPIXEL_MAP_I_TO_G", "PIXEL_MAP_I_TO_G_SIZE", "getPIXEL_MAP_I_TO_G_SIZE", "PIXEL_MAP_I_TO_I", "getPIXEL_MAP_I_TO_I", "PIXEL_MAP_I_TO_I_SIZE", "getPIXEL_MAP_I_TO_I_SIZE", "PIXEL_MAP_I_TO_R", "getPIXEL_MAP_I_TO_R", "PIXEL_MAP_I_TO_R_SIZE", "getPIXEL_MAP_I_TO_R_SIZE", "PIXEL_MAP_R_TO_R", "getPIXEL_MAP_R_TO_R", "PIXEL_MAP_R_TO_R_SIZE", "getPIXEL_MAP_R_TO_R_SIZE", "PIXEL_MAP_S_TO_S", "getPIXEL_MAP_S_TO_S", "PIXEL_MAP_S_TO_S_SIZE", "getPIXEL_MAP_S_TO_S_SIZE", "PIXEL_MODE_BIT", "getPIXEL_MODE_BIT", "POINT", "getPOINT", "POINTS", "getPOINTS", "POINT_BIT", "getPOINT_BIT", "POINT_SIZE", "getPOINT_SIZE", "POINT_SIZE_GRANULARITY", "getPOINT_SIZE_GRANULARITY", "POINT_SIZE_RANGE", "getPOINT_SIZE_RANGE", "POINT_SMOOTH", "getPOINT_SMOOTH", "POINT_SMOOTH_HINT", "getPOINT_SMOOTH_HINT", "POINT_TOKEN", "getPOINT_TOKEN", "POLYGON", "getPOLYGON", "POLYGON_BIT", "getPOLYGON_BIT", "POLYGON_MODE", "getPOLYGON_MODE", "POLYGON_OFFSET_FACTOR", "getPOLYGON_OFFSET_FACTOR", "POLYGON_OFFSET_FILL", "getPOLYGON_OFFSET_FILL", "POLYGON_OFFSET_LINE", "getPOLYGON_OFFSET_LINE", "POLYGON_OFFSET_POINT", "getPOLYGON_OFFSET_POINT", "POLYGON_OFFSET_UNITS", "getPOLYGON_OFFSET_UNITS", "POLYGON_SMOOTH", "getPOLYGON_SMOOTH", "POLYGON_SMOOTH_HINT", "getPOLYGON_SMOOTH_HINT", "POLYGON_STIPPLE", "getPOLYGON_STIPPLE", "POLYGON_STIPPLE_BIT", "getPOLYGON_STIPPLE_BIT", "POLYGON_TOKEN", "getPOLYGON_TOKEN", "POSITION", "getPOSITION", "PROJECTION", "getPROJECTION", "PROJECTION_MATRIX", "getPROJECTION_MATRIX", "PROJECTION_STACK_DEPTH", "getPROJECTION_STACK_DEPTH", "PROXY_TEXTURE_1D", "getPROXY_TEXTURE_1D", "PROXY_TEXTURE_2D", "getPROXY_TEXTURE_2D", "Q", "getQ", "QUADRATIC_ATTENUATION", "getQUADRATIC_ATTENUATION", "QUADS", "getQUADS", "QUAD_STRIP", "getQUAD_STRIP", "R", "getR", "R3_G3_B2", "getR3_G3_B2", "READ_BUFFER", "getREAD_BUFFER", "RED", "getRED", "RED_BIAS", "getRED_BIAS", "RED_BITS", "getRED_BITS", "RED_SCALE", "getRED_SCALE", "RENDER", "getRENDER", "RENDERER", "getRENDERER", "RENDER_MODE", "getRENDER_MODE", "REPEAT", "getREPEAT", "REPLACE", "getREPLACE", "RETURN", "getRETURN", "RGB", "getRGB", "RGB10", "getRGB10", "RGB10_A2", "getRGB10_A2", "RGB12", "getRGB12", "RGB16", "getRGB16", "RGB4", "getRGB4", "RGB5", "getRGB5", "RGB5_A1", "getRGB5_A1", "RGB8", "getRGB8", "RGBA", "getRGBA", "RGBA12", "getRGBA12", "RGBA16", "getRGBA16", "RGBA2", "getRGBA2", "RGBA4", "getRGBA4", "RGBA8", "getRGBA8", "RGBA_MODE", "getRGBA_MODE", "RIGHT", "getRIGHT", "S", "getS", "SCISSOR_BIT", "getSCISSOR_BIT", "SCISSOR_BOX", "getSCISSOR_BOX", "SCISSOR_TEST", "getSCISSOR_TEST", "SELECT", "getSELECT", "SELECTION_BUFFER_POINTER", "getSELECTION_BUFFER_POINTER", "SELECTION_BUFFER_SIZE", "getSELECTION_BUFFER_SIZE", "SET", "getSET", "SHADE_MODEL", "getSHADE_MODEL", "SHININESS", "getSHININESS", "SHORT", "getSHORT", "SMOOTH", "getSMOOTH", "SPECULAR", "getSPECULAR", "SPHERE_MAP", "getSPHERE_MAP", "SPOT_CUTOFF", "getSPOT_CUTOFF", "SPOT_DIRECTION", "getSPOT_DIRECTION", "SPOT_EXPONENT", "getSPOT_EXPONENT", "SRC_ALPHA", "getSRC_ALPHA", "SRC_ALPHA_SATURATE", "getSRC_ALPHA_SATURATE", "SRC_COLOR", "getSRC_COLOR", "STACK_OVERFLOW", "getSTACK_OVERFLOW", "STACK_UNDERFLOW", "getSTACK_UNDERFLOW", "STENCIL", "getSTENCIL", "STENCIL_BITS", "getSTENCIL_BITS", "STENCIL_BUFFER_BIT", "getSTENCIL_BUFFER_BIT", "STENCIL_CLEAR_VALUE", "getSTENCIL_CLEAR_VALUE", "STENCIL_FAIL", "getSTENCIL_FAIL", "STENCIL_FUNC", "getSTENCIL_FUNC", "STENCIL_INDEX", "getSTENCIL_INDEX", "STENCIL_PASS_DEPTH_FAIL", "getSTENCIL_PASS_DEPTH_FAIL", "STENCIL_PASS_DEPTH_PASS", "getSTENCIL_PASS_DEPTH_PASS", "STENCIL_REF", "getSTENCIL_REF", "STENCIL_TEST", "getSTENCIL_TEST", "STENCIL_VALUE_MASK", "getSTENCIL_VALUE_MASK", "STENCIL_WRITEMASK", "getSTENCIL_WRITEMASK", "STEREO", "getSTEREO", "SUBPIXEL_BITS", "getSUBPIXEL_BITS", "T", "getT", "T2F_C3F_V3F", "getT2F_C3F_V3F", "T2F_C4F_N3F_V3F", "getT2F_C4F_N3F_V3F", "T2F_C4UB_V3F", "getT2F_C4UB_V3F", "T2F_N3F_V3F", "getT2F_N3F_V3F", "T2F_V3F", "getT2F_V3F", "T4F_C4F_N3F_V4F", "getT4F_C4F_N3F_V4F", "T4F_V4F", "getT4F_V4F", "TEXTURE", "getTEXTURE", "TEXTURE_1D", "getTEXTURE_1D", "TEXTURE_2D", "getTEXTURE_2D", "TEXTURE_ALPHA_SIZE", "getTEXTURE_ALPHA_SIZE", "TEXTURE_BINDING_1D", "getTEXTURE_BINDING_1D", "TEXTURE_BINDING_2D", "getTEXTURE_BINDING_2D", "TEXTURE_BIT", "getTEXTURE_BIT", "TEXTURE_BLUE_SIZE", "getTEXTURE_BLUE_SIZE", "TEXTURE_BORDER", "getTEXTURE_BORDER", "TEXTURE_BORDER_COLOR", "getTEXTURE_BORDER_COLOR", "TEXTURE_COMPONENTS", "getTEXTURE_COMPONENTS", "TEXTURE_COORD_ARRAY", "getTEXTURE_COORD_ARRAY", "TEXTURE_COORD_ARRAY_POINTER", "getTEXTURE_COORD_ARRAY_POINTER", "TEXTURE_COORD_ARRAY_SIZE", "getTEXTURE_COORD_ARRAY_SIZE", "TEXTURE_COORD_ARRAY_STRIDE", "getTEXTURE_COORD_ARRAY_STRIDE", "TEXTURE_COORD_ARRAY_TYPE", "getTEXTURE_COORD_ARRAY_TYPE", "TEXTURE_ENV", "getTEXTURE_ENV", "TEXTURE_ENV_COLOR", "getTEXTURE_ENV_COLOR", "TEXTURE_ENV_MODE", "getTEXTURE_ENV_MODE", "TEXTURE_GEN_MODE", "getTEXTURE_GEN_MODE", "TEXTURE_GEN_Q", "getTEXTURE_GEN_Q", "TEXTURE_GEN_R", "getTEXTURE_GEN_R", "TEXTURE_GEN_S", "getTEXTURE_GEN_S", "TEXTURE_GEN_T", "getTEXTURE_GEN_T", "TEXTURE_GREEN_SIZE", "getTEXTURE_GREEN_SIZE", "TEXTURE_HEIGHT", "getTEXTURE_HEIGHT", "TEXTURE_INTENSITY_SIZE", "getTEXTURE_INTENSITY_SIZE", "TEXTURE_INTERNAL_FORMAT", "getTEXTURE_INTERNAL_FORMAT", "TEXTURE_LUMINANCE_SIZE", "getTEXTURE_LUMINANCE_SIZE", "TEXTURE_MAG_FILTER", "getTEXTURE_MAG_FILTER", "TEXTURE_MATRIX", "getTEXTURE_MATRIX", "TEXTURE_MIN_FILTER", "getTEXTURE_MIN_FILTER", "TEXTURE_PRIORITY", "getTEXTURE_PRIORITY", "TEXTURE_RED_SIZE", "getTEXTURE_RED_SIZE", "TEXTURE_RESIDENT", "getTEXTURE_RESIDENT", "TEXTURE_STACK_DEPTH", "getTEXTURE_STACK_DEPTH", "TEXTURE_WIDTH", "getTEXTURE_WIDTH", "TEXTURE_WRAP_S", "getTEXTURE_WRAP_S", "TEXTURE_WRAP_T", "getTEXTURE_WRAP_T", "TRANSFORM_BIT", "getTRANSFORM_BIT", "TRIANGLES", "getTRIANGLES", "TRIANGLE_FAN", "getTRIANGLE_FAN", "TRIANGLE_STRIP", "getTRIANGLE_STRIP", "TRUE", "getTRUE", "UNPACK_ALIGNMENT", "getUNPACK_ALIGNMENT", "UNPACK_LSB_FIRST", "getUNPACK_LSB_FIRST", "UNPACK_ROW_LENGTH", "getUNPACK_ROW_LENGTH", "UNPACK_SKIP_PIXELS", "getUNPACK_SKIP_PIXELS", "UNPACK_SKIP_ROWS", "getUNPACK_SKIP_ROWS", "UNPACK_SWAP_BYTES", "getUNPACK_SWAP_BYTES", "UNSIGNED_BYTE", "getUNSIGNED_BYTE", "UNSIGNED_INT", "getUNSIGNED_INT", "UNSIGNED_SHORT", "getUNSIGNED_SHORT", "V2F", "getV2F", "V3F", "getV3F", "VENDOR", "getVENDOR", "VERSION", "getVERSION", "VERTEX_ARRAY", "getVERTEX_ARRAY", "VERTEX_ARRAY_POINTER", "getVERTEX_ARRAY_POINTER", "VERTEX_ARRAY_SIZE", "getVERTEX_ARRAY_SIZE", "VERTEX_ARRAY_STRIDE", "getVERTEX_ARRAY_STRIDE", "VERTEX_ARRAY_TYPE", "getVERTEX_ARRAY_TYPE", "VIEWPORT", "getVIEWPORT", "VIEWPORT_BIT", "getVIEWPORT_BIT", "XOR", "getXOR", "ZERO", "getZERO", "ZOOM_X", "getZOOM_X", "ZOOM_Y", "getZOOM_Y", "accum", "", "op", "value", "", "alphaFunc", "func", "ref", "bindTexture", "target", "Lme/alpha432/stay/util/graphics/opengl/dsl/I;", "texture", "bitMap", "width", "height", "xorig", "yorig", "xmove", "ymove", "bitmap_buffer_offset", "", "bitmap", "Ljava/nio/ByteBuffer;", "blendFunc", "sfactor", "dfactor", "callList", "list", "callLists", "lists", "Lme/alpha432/stay/util/graphics/opengl/dsl/BBuffer;", "Ljava/nio/IntBuffer;", "Lme/alpha432/stay/util/graphics/opengl/dsl/IBuffer;", "Ljava/nio/ShortBuffer;", "Lme/alpha432/stay/util/graphics/opengl/dsl/SBuffer;", "clear", "mask", "clearAccum", "red", "Lme/alpha432/stay/util/graphics/opengl/dsl/F;", "green", "blue", "alpha", "clearColor", "popMatrix", "pushMatrix", "Stay" })
public final class OpenGLBuilder
{
    private final int ACCUM;
    private final int LOAD;
    private final int RETURN;
    private final int MULT;
    private final int ADD;
    private final int NEVER;
    private final int LESS;
    private final int EQUAL;
    private final int LEQUAL;
    private final int GREATER;
    private final int NOTEQUAL;
    private final int GEQUAL;
    private final int ALWAYS;
    private final int CURRENT_BIT;
    private final int POINT_BIT;
    private final int LINE_BIT;
    private final int POLYGON_BIT;
    private final int POLYGON_STIPPLE_BIT;
    private final int PIXEL_MODE_BIT;
    private final int LIGHTING_BIT;
    private final int FOG_BIT;
    private final int DEPTH_BUFFER_BIT;
    private final int ACCUM_BUFFER_BIT;
    private final int STENCIL_BUFFER_BIT;
    private final int VIEWPORT_BIT;
    private final int TRANSFORM_BIT;
    private final int ENABLE_BIT;
    private final int COLOR_BUFFER_BIT;
    private final int HINT_BIT;
    private final int EVAL_BIT;
    private final int LIST_BIT;
    private final int TEXTURE_BIT;
    private final int SCISSOR_BIT;
    private final int ALL_ATTRIB_BITS;
    private final int POINTS;
    private final int LINES;
    private final int LINE_LOOP;
    private final int LINE_STRIP;
    private final int TRIANGLES;
    private final int TRIANGLE_STRIP;
    private final int TRIANGLE_FAN;
    private final int QUADS;
    private final int QUAD_STRIP;
    private final int POLYGON;
    private final int ZERO;
    private final int ONE;
    private final int SRC_COLOR;
    private final int ONE_MINUS_SRC_COLOR;
    private final int SRC_ALPHA;
    private final int ONE_MINUS_SRC_ALPHA;
    private final int DST_ALPHA;
    private final int ONE_MINUS_DST_ALPHA;
    private final int DST_COLOR;
    private final int ONE_MINUS_DST_COLOR;
    private final int SRC_ALPHA_SATURATE;
    private final int CONSTANT_COLOR;
    private final int ONE_MINUS_CONSTANT_COLOR;
    private final int CONSTANT_ALPHA;
    private final int ONE_MINUS_CONSTANT_ALPHA;
    private final int TRUE;
    private final int FALSE;
    private final int CLIP_PLANE0;
    private final int CLIP_PLANE1;
    private final int CLIP_PLANE2;
    private final int CLIP_PLANE3;
    private final int CLIP_PLANE4;
    private final int CLIP_PLANE5;
    private final int BYTE;
    private final int UNSIGNED_BYTE;
    private final int SHORT;
    private final int UNSIGNED_SHORT;
    private final int INT;
    private final int UNSIGNED_INT;
    private final int FLOAT;
    private final int GL_2_BYTES;
    private final int GL_3_BYTES;
    private final int GL_4_BYTES;
    private final int DOUBLE;
    private final int NONE;
    private final int FRONT_LEFT;
    private final int FRONT_RIGHT;
    private final int BACK_LEFT;
    private final int BACK_RIGHT;
    private final int FRONT;
    private final int BACK;
    private final int LEFT;
    private final int RIGHT;
    private final int FRONT_AND_BACK;
    private final int AUX0;
    private final int AUX1;
    private final int AUX2;
    private final int AUX3;
    private final int NO_ERROR;
    private final int INVALID_ENUM;
    private final int INVALID_VALUE;
    private final int INVALID_OPERATION;
    private final int STACK_OVERFLOW;
    private final int STACK_UNDERFLOW;
    private final int OUT_OF_MEMORY;
    private final int GL_2D;
    private final int GL_3D;
    private final int GL_3D_COLOR;
    private final int GL_3D_COLOR_TEXTURE;
    private final int GL_4D_COLOR_TEXTURE;
    private final int PASS_THROUGH_TOKEN;
    private final int POINT_TOKEN;
    private final int LINE_TOKEN;
    private final int POLYGON_TOKEN;
    private final int BITMAP_TOKEN;
    private final int DRAW_PIXEL_TOKEN;
    private final int COPY_PIXEL_TOKEN;
    private final int LINE_RESET_TOKEN;
    private final int EXP;
    private final int EXP2;
    private final int CW;
    private final int CCW;
    private final int COEFF;
    private final int ORDER;
    private final int DOMAIN;
    private final int CURRENT_COLOR;
    private final int CURRENT_INDEX;
    private final int CURRENT_NORMAL;
    private final int CURRENT_TEXTURE_COORDS;
    private final int CURRENT_RASTER_COLOR;
    private final int CURRENT_RASTER_INDEX;
    private final int CURRENT_RASTER_TEXTURE_COORDS;
    private final int CURRENT_RASTER_POSITION;
    private final int CURRENT_RASTER_POSITION_VALID;
    private final int CURRENT_RASTER_DISTANCE;
    private final int POINT_SMOOTH;
    private final int POINT_SIZE;
    private final int POINT_SIZE_RANGE;
    private final int POINT_SIZE_GRANULARITY;
    private final int LINE_SMOOTH;
    private final int LINE_WIDTH;
    private final int LINE_WIDTH_RANGE;
    private final int LINE_WIDTH_GRANULARITY;
    private final int LINE_STIPPLE;
    private final int LINE_STIPPLE_PATTERN;
    private final int LINE_STIPPLE_REPEAT;
    private final int LIST_MODE;
    private final int MAX_LIST_NESTING;
    private final int LIST_BASE;
    private final int LIST_INDEX;
    private final int POLYGON_MODE;
    private final int POLYGON_SMOOTH;
    private final int POLYGON_STIPPLE;
    private final int EDGE_FLAG;
    private final int CULL_FACE;
    private final int CULL_FACE_MODE;
    private final int FRONT_FACE;
    private final int LIGHTING;
    private final int LIGHT_MODEL_LOCAL_VIEWER;
    private final int LIGHT_MODEL_TWO_SIDE;
    private final int LIGHT_MODEL_AMBIENT;
    private final int SHADE_MODEL;
    private final int COLOR_MATERIAL_FACE;
    private final int COLOR_MATERIAL_PARAMETER;
    private final int COLOR_MATERIAL;
    private final int FOG;
    private final int FOG_INDEX;
    private final int FOG_DENSITY;
    private final int FOG_START;
    private final int FOG_END;
    private final int FOG_MODE;
    private final int FOG_COLOR;
    private final int DEPTH_RANGE;
    private final int DEPTH_TEST;
    private final int DEPTH_WRITEMASK;
    private final int DEPTH_CLEAR_VALUE;
    private final int DEPTH_FUNC;
    private final int ACCUM_CLEAR_VALUE;
    private final int STENCIL_TEST;
    private final int STENCIL_CLEAR_VALUE;
    private final int STENCIL_FUNC;
    private final int STENCIL_VALUE_MASK;
    private final int STENCIL_FAIL;
    private final int STENCIL_PASS_DEPTH_FAIL;
    private final int STENCIL_PASS_DEPTH_PASS;
    private final int STENCIL_REF;
    private final int STENCIL_WRITEMASK;
    private final int MATRIX_MODE;
    private final int NORMALIZE;
    private final int VIEWPORT;
    private final int MODELVIEW_STACK_DEPTH;
    private final int PROJECTION_STACK_DEPTH;
    private final int TEXTURE_STACK_DEPTH;
    private final int MODELVIEW_MATRIX;
    private final int PROJECTION_MATRIX;
    private final int TEXTURE_MATRIX;
    private final int ATTRIB_STACK_DEPTH;
    private final int CLIENT_ATTRIB_STACK_DEPTH;
    private final int ALPHA_TEST;
    private final int ALPHA_TEST_FUNC;
    private final int ALPHA_TEST_REF;
    private final int DITHER;
    private final int BLEND_DST;
    private final int BLEND_SRC;
    private final int BLEND;
    private final int LOGIC_OP_MODE;
    private final int INDEX_LOGIC_OP;
    private final int COLOR_LOGIC_OP;
    private final int AUX_BUFFERS;
    private final int DRAW_BUFFER;
    private final int READ_BUFFER;
    private final int SCISSOR_BOX;
    private final int SCISSOR_TEST;
    private final int INDEX_CLEAR_VALUE;
    private final int INDEX_WRITEMASK;
    private final int COLOR_CLEAR_VALUE;
    private final int COLOR_WRITEMASK;
    private final int INDEX_MODE;
    private final int RGBA_MODE;
    private final int DOUBLEBUFFER;
    private final int STEREO;
    private final int RENDER_MODE;
    private final int PERSPECTIVE_CORRECTION_HINT;
    private final int POINT_SMOOTH_HINT;
    private final int LINE_SMOOTH_HINT;
    private final int POLYGON_SMOOTH_HINT;
    private final int FOG_HINT;
    private final int TEXTURE_GEN_S;
    private final int TEXTURE_GEN_T;
    private final int TEXTURE_GEN_R;
    private final int TEXTURE_GEN_Q;
    private final int PIXEL_MAP_I_TO_I;
    private final int PIXEL_MAP_S_TO_S;
    private final int PIXEL_MAP_I_TO_R;
    private final int PIXEL_MAP_I_TO_G;
    private final int PIXEL_MAP_I_TO_B;
    private final int PIXEL_MAP_I_TO_A;
    private final int PIXEL_MAP_R_TO_R;
    private final int PIXEL_MAP_G_TO_G;
    private final int PIXEL_MAP_B_TO_B;
    private final int PIXEL_MAP_A_TO_A;
    private final int PIXEL_MAP_I_TO_I_SIZE;
    private final int PIXEL_MAP_S_TO_S_SIZE;
    private final int PIXEL_MAP_I_TO_R_SIZE;
    private final int PIXEL_MAP_I_TO_G_SIZE;
    private final int PIXEL_MAP_I_TO_B_SIZE;
    private final int PIXEL_MAP_I_TO_A_SIZE;
    private final int PIXEL_MAP_R_TO_R_SIZE;
    private final int PIXEL_MAP_G_TO_G_SIZE;
    private final int PIXEL_MAP_B_TO_B_SIZE;
    private final int PIXEL_MAP_A_TO_A_SIZE;
    private final int UNPACK_SWAP_BYTES;
    private final int UNPACK_LSB_FIRST;
    private final int UNPACK_ROW_LENGTH;
    private final int UNPACK_SKIP_ROWS;
    private final int UNPACK_SKIP_PIXELS;
    private final int UNPACK_ALIGNMENT;
    private final int PACK_SWAP_BYTES;
    private final int PACK_LSB_FIRST;
    private final int PACK_ROW_LENGTH;
    private final int PACK_SKIP_ROWS;
    private final int PACK_SKIP_PIXELS;
    private final int PACK_ALIGNMENT;
    private final int MAP_COLOR;
    private final int MAP_STENCIL;
    private final int INDEX_SHIFT;
    private final int INDEX_OFFSET;
    private final int RED_SCALE;
    private final int RED_BIAS;
    private final int ZOOM_X;
    private final int ZOOM_Y;
    private final int GREEN_SCALE;
    private final int GREEN_BIAS;
    private final int BLUE_SCALE;
    private final int BLUE_BIAS;
    private final int ALPHA_SCALE;
    private final int ALPHA_BIAS;
    private final int DEPTH_SCALE;
    private final int DEPTH_BIAS;
    private final int MAX_EVAL_ORDER;
    private final int MAX_LIGHTS;
    private final int MAX_CLIP_PLANES;
    private final int MAX_TEXTURE_SIZE;
    private final int MAX_PIXEL_MAP_TABLE;
    private final int MAX_ATTRIB_STACK_DEPTH;
    private final int MAX_MODELVIEW_STACK_DEPTH;
    private final int MAX_NAME_STACK_DEPTH;
    private final int MAX_PROJECTION_STACK_DEPTH;
    private final int MAX_TEXTURE_STACK_DEPTH;
    private final int MAX_VIEWPORT_DIMS;
    private final int MAX_CLIENT_ATTRIB_STACK_DEPTH;
    private final int SUBPIXEL_BITS;
    private final int INDEX_BITS;
    private final int RED_BITS;
    private final int GREEN_BITS;
    private final int BLUE_BITS;
    private final int ALPHA_BITS;
    private final int DEPTH_BITS;
    private final int STENCIL_BITS;
    private final int ACCUM_RED_BITS;
    private final int ACCUM_GREEN_BITS;
    private final int ACCUM_BLUE_BITS;
    private final int ACCUM_ALPHA_BITS;
    private final int NAME_STACK_DEPTH;
    private final int AUTO_NORMAL;
    private final int MAP1_COLOR_4;
    private final int MAP1_INDEX;
    private final int MAP1_NORMAL;
    private final int MAP1_TEXTURE_COORD_1;
    private final int MAP1_TEXTURE_COORD_2;
    private final int MAP1_TEXTURE_COORD_3;
    private final int MAP1_TEXTURE_COORD_4;
    private final int MAP1_VERTEX_3;
    private final int MAP1_VERTEX_4;
    private final int MAP2_COLOR_4;
    private final int MAP2_INDEX;
    private final int MAP2_NORMAL;
    private final int MAP2_TEXTURE_COORD_1;
    private final int MAP2_TEXTURE_COORD_2;
    private final int MAP2_TEXTURE_COORD_3;
    private final int MAP2_TEXTURE_COORD_4;
    private final int MAP2_VERTEX_3;
    private final int MAP2_VERTEX_4;
    private final int MAP1_GRID_DOMAIN;
    private final int MAP1_GRID_SEGMENTS;
    private final int MAP2_GRID_DOMAIN;
    private final int MAP2_GRID_SEGMENTS;
    private final int TEXTURE_1D;
    private final int TEXTURE_2D;
    private final int FEEDBACK_BUFFER_POINTER;
    private final int FEEDBACK_BUFFER_SIZE;
    private final int FEEDBACK_BUFFER_TYPE;
    private final int SELECTION_BUFFER_POINTER;
    private final int SELECTION_BUFFER_SIZE;
    private final int TEXTURE_WIDTH;
    private final int TEXTURE_HEIGHT;
    private final int TEXTURE_INTERNAL_FORMAT;
    private final int TEXTURE_BORDER_COLOR;
    private final int TEXTURE_BORDER;
    private final int DONT_CARE;
    private final int FASTEST;
    private final int NICEST;
    private final int LIGHT0;
    private final int LIGHT1;
    private final int LIGHT2;
    private final int LIGHT3;
    private final int LIGHT4;
    private final int LIGHT5;
    private final int LIGHT6;
    private final int LIGHT7;
    private final int AMBIENT;
    private final int DIFFUSE;
    private final int SPECULAR;
    private final int POSITION;
    private final int SPOT_DIRECTION;
    private final int SPOT_EXPONENT;
    private final int SPOT_CUTOFF;
    private final int CONSTANT_ATTENUATION;
    private final int LINEAR_ATTENUATION;
    private final int QUADRATIC_ATTENUATION;
    private final int COMPILE;
    private final int COMPILE_AND_EXECUTE;
    private final int CLEAR;
    private final int AND;
    private final int AND_REVERSE;
    private final int COPY;
    private final int AND_INVERTED;
    private final int NOOP;
    private final int XOR;
    private final int OR;
    private final int NOR;
    private final int EQUIV;
    private final int INVERT;
    private final int OR_REVERSE;
    private final int COPY_INVERTED;
    private final int OR_INVERTED;
    private final int NAND;
    private final int SET;
    private final int EMISSION;
    private final int SHININESS;
    private final int AMBIENT_AND_DIFFUSE;
    private final int COLOR_INDEXES;
    private final int MODELVIEW;
    private final int PROJECTION;
    private final int TEXTURE;
    private final int COLOR;
    private final int DEPTH;
    private final int STENCIL;
    private final int COLOR_INDEX;
    private final int STENCIL_INDEX;
    private final int DEPTH_COMPONENT;
    private final int RED;
    private final int GREEN;
    private final int BLUE;
    private final int ALPHA;
    private final int RGB;
    private final int RGBA;
    private final int LUMINANCE;
    private final int LUMINANCE_ALPHA;
    private final int BITMAP;
    private final int POINT;
    private final int LINE;
    private final int FILL;
    private final int RENDER;
    private final int FEEDBACK;
    private final int SELECT;
    private final int FLAT;
    private final int SMOOTH;
    private final int KEEP;
    private final int REPLACE;
    private final int INCR;
    private final int DECR;
    private final int VENDOR;
    private final int RENDERER;
    private final int VERSION;
    private final int EXTENSIONS;
    private final int S;
    private final int T;
    private final int R;
    private final int Q;
    private final int MODULATE;
    private final int DECAL;
    private final int TEXTURE_ENV_MODE;
    private final int TEXTURE_ENV_COLOR;
    private final int TEXTURE_ENV;
    private final int EYE_LINEAR;
    private final int OBJECT_LINEAR;
    private final int SPHERE_MAP;
    private final int TEXTURE_GEN_MODE;
    private final int OBJECT_PLANE;
    private final int EYE_PLANE;
    private final int NEAREST;
    private final int LINEAR;
    private final int NEAREST_MIPMAP_NEAREST;
    private final int LINEAR_MIPMAP_NEAREST;
    private final int NEAREST_MIPMAP_LINEAR;
    private final int LINEAR_MIPMAP_LINEAR;
    private final int TEXTURE_MAG_FILTER;
    private final int TEXTURE_MIN_FILTER;
    private final int TEXTURE_WRAP_S;
    private final int TEXTURE_WRAP_T;
    private final int CLAMP;
    private final int REPEAT;
    private final int CLIENT_PIXEL_STORE_BIT;
    private final int CLIENT_VERTEX_ARRAY_BIT;
    private final int ALL_CLIENT_ATTRIB_BITS;
    private final int POLYGON_OFFSET_FACTOR;
    private final int POLYGON_OFFSET_UNITS;
    private final int POLYGON_OFFSET_POINT;
    private final int POLYGON_OFFSET_LINE;
    private final int POLYGON_OFFSET_FILL;
    private final int ALPHA4;
    private final int ALPHA8;
    private final int ALPHA12;
    private final int ALPHA16;
    private final int LUMINANCE4;
    private final int LUMINANCE8;
    private final int LUMINANCE12;
    private final int LUMINANCE16;
    private final int LUMINANCE4_ALPHA4;
    private final int LUMINANCE6_ALPHA2;
    private final int LUMINANCE8_ALPHA8;
    private final int LUMINANCE12_ALPHA4;
    private final int LUMINANCE12_ALPHA12;
    private final int LUMINANCE16_ALPHA16;
    private final int INTENSITY;
    private final int INTENSITY4;
    private final int INTENSITY8;
    private final int INTENSITY12;
    private final int INTENSITY16;
    private final int R3_G3_B2;
    private final int RGB4;
    private final int RGB5;
    private final int RGB8;
    private final int RGB10;
    private final int RGB12;
    private final int RGB16;
    private final int RGBA2;
    private final int RGBA4;
    private final int RGB5_A1;
    private final int RGBA8;
    private final int RGB10_A2;
    private final int RGBA12;
    private final int RGBA16;
    private final int TEXTURE_RED_SIZE;
    private final int TEXTURE_GREEN_SIZE;
    private final int TEXTURE_BLUE_SIZE;
    private final int TEXTURE_ALPHA_SIZE;
    private final int TEXTURE_LUMINANCE_SIZE;
    private final int TEXTURE_INTENSITY_SIZE;
    private final int PROXY_TEXTURE_1D;
    private final int PROXY_TEXTURE_2D;
    private final int TEXTURE_PRIORITY;
    private final int TEXTURE_RESIDENT;
    private final int TEXTURE_BINDING_1D;
    private final int TEXTURE_BINDING_2D;
    private final int VERTEX_ARRAY;
    private final int NORMAL_ARRAY;
    private final int COLOR_ARRAY;
    private final int INDEX_ARRAY;
    private final int TEXTURE_COORD_ARRAY;
    private final int EDGE_FLAG_ARRAY;
    private final int VERTEX_ARRAY_SIZE;
    private final int VERTEX_ARRAY_TYPE;
    private final int VERTEX_ARRAY_STRIDE;
    private final int NORMAL_ARRAY_TYPE;
    private final int NORMAL_ARRAY_STRIDE;
    private final int COLOR_ARRAY_SIZE;
    private final int COLOR_ARRAY_TYPE;
    private final int COLOR_ARRAY_STRIDE;
    private final int INDEX_ARRAY_TYPE;
    private final int INDEX_ARRAY_STRIDE;
    private final int TEXTURE_COORD_ARRAY_SIZE;
    private final int TEXTURE_COORD_ARRAY_TYPE;
    private final int TEXTURE_COORD_ARRAY_STRIDE;
    private final int EDGE_FLAG_ARRAY_STRIDE;
    private final int VERTEX_ARRAY_POINTER;
    private final int NORMAL_ARRAY_POINTER;
    private final int COLOR_ARRAY_POINTER;
    private final int INDEX_ARRAY_POINTER;
    private final int TEXTURE_COORD_ARRAY_POINTER;
    private final int EDGE_FLAG_ARRAY_POINTER;
    private final int V2F;
    private final int V3F;
    private final int C4UB_V2F;
    private final int C4UB_V3F;
    private final int C3F_V3F;
    private final int N3F_V3F;
    private final int C4F_N3F_V3F;
    private final int T2F_V3F;
    private final int T4F_V4F;
    private final int T2F_C4UB_V3F;
    private final int T2F_C3F_V3F;
    private final int T2F_N3F_V3F;
    private final int T2F_C4F_N3F_V3F;
    private final int T4F_C4F_N3F_V4F;
    private final int LOGIC_OP;
    private final int TEXTURE_COMPONENTS;
    
    public OpenGLBuilder() {
        this.ACCUM = 256;
        this.LOAD = 257;
        this.RETURN = 258;
        this.MULT = 259;
        this.ADD = 260;
        this.NEVER = 512;
        this.LESS = 513;
        this.EQUAL = 514;
        this.LEQUAL = 515;
        this.GREATER = 516;
        this.NOTEQUAL = 517;
        this.GEQUAL = 518;
        this.ALWAYS = 519;
        this.CURRENT_BIT = 1;
        this.POINT_BIT = 2;
        this.LINE_BIT = 4;
        this.POLYGON_BIT = 8;
        this.POLYGON_STIPPLE_BIT = 16;
        this.PIXEL_MODE_BIT = 32;
        this.LIGHTING_BIT = 64;
        this.FOG_BIT = 128;
        this.DEPTH_BUFFER_BIT = 256;
        this.ACCUM_BUFFER_BIT = 512;
        this.STENCIL_BUFFER_BIT = 1024;
        this.VIEWPORT_BIT = 2048;
        this.TRANSFORM_BIT = 4096;
        this.ENABLE_BIT = 8192;
        this.COLOR_BUFFER_BIT = 16384;
        this.HINT_BIT = 32768;
        this.EVAL_BIT = 65536;
        this.LIST_BIT = 131072;
        this.TEXTURE_BIT = 262144;
        this.SCISSOR_BIT = 524288;
        this.ALL_ATTRIB_BITS = 1048575;
        this.LINES = 1;
        this.LINE_LOOP = 2;
        this.LINE_STRIP = 3;
        this.TRIANGLES = 4;
        this.TRIANGLE_STRIP = 5;
        this.TRIANGLE_FAN = 6;
        this.QUADS = 7;
        this.QUAD_STRIP = 8;
        this.POLYGON = 9;
        this.ONE = 1;
        this.SRC_COLOR = 768;
        this.ONE_MINUS_SRC_COLOR = 769;
        this.SRC_ALPHA = 770;
        this.ONE_MINUS_SRC_ALPHA = 771;
        this.DST_ALPHA = 772;
        this.ONE_MINUS_DST_ALPHA = 773;
        this.DST_COLOR = 774;
        this.ONE_MINUS_DST_COLOR = 775;
        this.SRC_ALPHA_SATURATE = 776;
        this.CONSTANT_COLOR = 32769;
        this.ONE_MINUS_CONSTANT_COLOR = 32770;
        this.CONSTANT_ALPHA = 32771;
        this.ONE_MINUS_CONSTANT_ALPHA = 32772;
        this.TRUE = 1;
        this.CLIP_PLANE0 = 12288;
        this.CLIP_PLANE1 = 12289;
        this.CLIP_PLANE2 = 12290;
        this.CLIP_PLANE3 = 12291;
        this.CLIP_PLANE4 = 12292;
        this.CLIP_PLANE5 = 12293;
        this.BYTE = 5120;
        this.UNSIGNED_BYTE = 5121;
        this.SHORT = 5122;
        this.UNSIGNED_SHORT = 5123;
        this.INT = 5124;
        this.UNSIGNED_INT = 5125;
        this.FLOAT = 5126;
        this.GL_2_BYTES = 5127;
        this.GL_3_BYTES = 5128;
        this.GL_4_BYTES = 5129;
        this.DOUBLE = 5130;
        this.FRONT_LEFT = 1024;
        this.FRONT_RIGHT = 1025;
        this.BACK_LEFT = 1026;
        this.BACK_RIGHT = 1027;
        this.FRONT = 1028;
        this.BACK = 1029;
        this.LEFT = 1030;
        this.RIGHT = 1031;
        this.FRONT_AND_BACK = 1032;
        this.AUX0 = 1033;
        this.AUX1 = 1034;
        this.AUX2 = 1035;
        this.AUX3 = 1036;
        this.INVALID_ENUM = 1280;
        this.INVALID_VALUE = 1281;
        this.INVALID_OPERATION = 1282;
        this.STACK_OVERFLOW = 1283;
        this.STACK_UNDERFLOW = 1284;
        this.OUT_OF_MEMORY = 1285;
        this.GL_2D = 1536;
        this.GL_3D = 1537;
        this.GL_3D_COLOR = 1538;
        this.GL_3D_COLOR_TEXTURE = 1539;
        this.GL_4D_COLOR_TEXTURE = 1540;
        this.PASS_THROUGH_TOKEN = 1792;
        this.POINT_TOKEN = 1793;
        this.LINE_TOKEN = 1794;
        this.POLYGON_TOKEN = 1795;
        this.BITMAP_TOKEN = 1796;
        this.DRAW_PIXEL_TOKEN = 1797;
        this.COPY_PIXEL_TOKEN = 1798;
        this.LINE_RESET_TOKEN = 1799;
        this.EXP = 2048;
        this.EXP2 = 2049;
        this.CW = 2304;
        this.CCW = 2305;
        this.COEFF = 2560;
        this.ORDER = 2561;
        this.DOMAIN = 2562;
        this.CURRENT_COLOR = 2816;
        this.CURRENT_INDEX = 2817;
        this.CURRENT_NORMAL = 2818;
        this.CURRENT_TEXTURE_COORDS = 2819;
        this.CURRENT_RASTER_COLOR = 2820;
        this.CURRENT_RASTER_INDEX = 2821;
        this.CURRENT_RASTER_TEXTURE_COORDS = 2822;
        this.CURRENT_RASTER_POSITION = 2823;
        this.CURRENT_RASTER_POSITION_VALID = 2824;
        this.CURRENT_RASTER_DISTANCE = 2825;
        this.POINT_SMOOTH = 2832;
        this.POINT_SIZE = 2833;
        this.POINT_SIZE_RANGE = 2834;
        this.POINT_SIZE_GRANULARITY = 2835;
        this.LINE_SMOOTH = 2848;
        this.LINE_WIDTH = 2849;
        this.LINE_WIDTH_RANGE = 2850;
        this.LINE_WIDTH_GRANULARITY = 2851;
        this.LINE_STIPPLE = 2852;
        this.LINE_STIPPLE_PATTERN = 2853;
        this.LINE_STIPPLE_REPEAT = 2854;
        this.LIST_MODE = 2864;
        this.MAX_LIST_NESTING = 2865;
        this.LIST_BASE = 2866;
        this.LIST_INDEX = 2867;
        this.POLYGON_MODE = 2880;
        this.POLYGON_SMOOTH = 2881;
        this.POLYGON_STIPPLE = 2882;
        this.EDGE_FLAG = 2883;
        this.CULL_FACE = 2884;
        this.CULL_FACE_MODE = 2885;
        this.FRONT_FACE = 2886;
        this.LIGHTING = 2896;
        this.LIGHT_MODEL_LOCAL_VIEWER = 2897;
        this.LIGHT_MODEL_TWO_SIDE = 2898;
        this.LIGHT_MODEL_AMBIENT = 2899;
        this.SHADE_MODEL = 2900;
        this.COLOR_MATERIAL_FACE = 2901;
        this.COLOR_MATERIAL_PARAMETER = 2902;
        this.COLOR_MATERIAL = 2903;
        this.FOG = 2912;
        this.FOG_INDEX = 2913;
        this.FOG_DENSITY = 2914;
        this.FOG_START = 2915;
        this.FOG_END = 2916;
        this.FOG_MODE = 2917;
        this.FOG_COLOR = 2918;
        this.DEPTH_RANGE = 2928;
        this.DEPTH_TEST = 2929;
        this.DEPTH_WRITEMASK = 2930;
        this.DEPTH_CLEAR_VALUE = 2931;
        this.DEPTH_FUNC = 2932;
        this.ACCUM_CLEAR_VALUE = 2944;
        this.STENCIL_TEST = 2960;
        this.STENCIL_CLEAR_VALUE = 2961;
        this.STENCIL_FUNC = 2962;
        this.STENCIL_VALUE_MASK = 2963;
        this.STENCIL_FAIL = 2964;
        this.STENCIL_PASS_DEPTH_FAIL = 2965;
        this.STENCIL_PASS_DEPTH_PASS = 2966;
        this.STENCIL_REF = 2967;
        this.STENCIL_WRITEMASK = 2968;
        this.MATRIX_MODE = 2976;
        this.NORMALIZE = 2977;
        this.VIEWPORT = 2978;
        this.MODELVIEW_STACK_DEPTH = 2979;
        this.PROJECTION_STACK_DEPTH = 2980;
        this.TEXTURE_STACK_DEPTH = 2981;
        this.MODELVIEW_MATRIX = 2982;
        this.PROJECTION_MATRIX = 2983;
        this.TEXTURE_MATRIX = 2984;
        this.ATTRIB_STACK_DEPTH = 2992;
        this.CLIENT_ATTRIB_STACK_DEPTH = 2993;
        this.ALPHA_TEST = 3008;
        this.ALPHA_TEST_FUNC = 3009;
        this.ALPHA_TEST_REF = 3010;
        this.DITHER = 3024;
        this.BLEND_DST = 3040;
        this.BLEND_SRC = 3041;
        this.BLEND = 3042;
        this.LOGIC_OP_MODE = 3056;
        this.INDEX_LOGIC_OP = 3057;
        this.COLOR_LOGIC_OP = 3058;
        this.AUX_BUFFERS = 3072;
        this.DRAW_BUFFER = 3073;
        this.READ_BUFFER = 3074;
        this.SCISSOR_BOX = 3088;
        this.SCISSOR_TEST = 3089;
        this.INDEX_CLEAR_VALUE = 3104;
        this.INDEX_WRITEMASK = 3105;
        this.COLOR_CLEAR_VALUE = 3106;
        this.COLOR_WRITEMASK = 3107;
        this.INDEX_MODE = 3120;
        this.RGBA_MODE = 3121;
        this.DOUBLEBUFFER = 3122;
        this.STEREO = 3123;
        this.RENDER_MODE = 3136;
        this.PERSPECTIVE_CORRECTION_HINT = 3152;
        this.POINT_SMOOTH_HINT = 3153;
        this.LINE_SMOOTH_HINT = 3154;
        this.POLYGON_SMOOTH_HINT = 3155;
        this.FOG_HINT = 3156;
        this.TEXTURE_GEN_S = 3168;
        this.TEXTURE_GEN_T = 3169;
        this.TEXTURE_GEN_R = 3170;
        this.TEXTURE_GEN_Q = 3171;
        this.PIXEL_MAP_I_TO_I = 3184;
        this.PIXEL_MAP_S_TO_S = 3185;
        this.PIXEL_MAP_I_TO_R = 3186;
        this.PIXEL_MAP_I_TO_G = 3187;
        this.PIXEL_MAP_I_TO_B = 3188;
        this.PIXEL_MAP_I_TO_A = 3189;
        this.PIXEL_MAP_R_TO_R = 3190;
        this.PIXEL_MAP_G_TO_G = 3191;
        this.PIXEL_MAP_B_TO_B = 3192;
        this.PIXEL_MAP_A_TO_A = 3193;
        this.PIXEL_MAP_I_TO_I_SIZE = 3248;
        this.PIXEL_MAP_S_TO_S_SIZE = 3249;
        this.PIXEL_MAP_I_TO_R_SIZE = 3250;
        this.PIXEL_MAP_I_TO_G_SIZE = 3251;
        this.PIXEL_MAP_I_TO_B_SIZE = 3252;
        this.PIXEL_MAP_I_TO_A_SIZE = 3253;
        this.PIXEL_MAP_R_TO_R_SIZE = 3254;
        this.PIXEL_MAP_G_TO_G_SIZE = 3255;
        this.PIXEL_MAP_B_TO_B_SIZE = 3256;
        this.PIXEL_MAP_A_TO_A_SIZE = 3257;
        this.UNPACK_SWAP_BYTES = 3312;
        this.UNPACK_LSB_FIRST = 3313;
        this.UNPACK_ROW_LENGTH = 3314;
        this.UNPACK_SKIP_ROWS = 3315;
        this.UNPACK_SKIP_PIXELS = 3316;
        this.UNPACK_ALIGNMENT = 3317;
        this.PACK_SWAP_BYTES = 3328;
        this.PACK_LSB_FIRST = 3329;
        this.PACK_ROW_LENGTH = 3330;
        this.PACK_SKIP_ROWS = 3331;
        this.PACK_SKIP_PIXELS = 3332;
        this.PACK_ALIGNMENT = 3333;
        this.MAP_COLOR = 3344;
        this.MAP_STENCIL = 3345;
        this.INDEX_SHIFT = 3346;
        this.INDEX_OFFSET = 3347;
        this.RED_SCALE = 3348;
        this.RED_BIAS = 3349;
        this.ZOOM_X = 3350;
        this.ZOOM_Y = 3351;
        this.GREEN_SCALE = 3352;
        this.GREEN_BIAS = 3353;
        this.BLUE_SCALE = 3354;
        this.BLUE_BIAS = 3355;
        this.ALPHA_SCALE = 3356;
        this.ALPHA_BIAS = 3357;
        this.DEPTH_SCALE = 3358;
        this.DEPTH_BIAS = 3359;
        this.MAX_EVAL_ORDER = 3376;
        this.MAX_LIGHTS = 3377;
        this.MAX_CLIP_PLANES = 3378;
        this.MAX_TEXTURE_SIZE = 3379;
        this.MAX_PIXEL_MAP_TABLE = 3380;
        this.MAX_ATTRIB_STACK_DEPTH = 3381;
        this.MAX_MODELVIEW_STACK_DEPTH = 3382;
        this.MAX_NAME_STACK_DEPTH = 3383;
        this.MAX_PROJECTION_STACK_DEPTH = 3384;
        this.MAX_TEXTURE_STACK_DEPTH = 3385;
        this.MAX_VIEWPORT_DIMS = 3386;
        this.MAX_CLIENT_ATTRIB_STACK_DEPTH = 3387;
        this.SUBPIXEL_BITS = 3408;
        this.INDEX_BITS = 3409;
        this.RED_BITS = 3410;
        this.GREEN_BITS = 3411;
        this.BLUE_BITS = 3412;
        this.ALPHA_BITS = 3413;
        this.DEPTH_BITS = 3414;
        this.STENCIL_BITS = 3415;
        this.ACCUM_RED_BITS = 3416;
        this.ACCUM_GREEN_BITS = 3417;
        this.ACCUM_BLUE_BITS = 3418;
        this.ACCUM_ALPHA_BITS = 3419;
        this.NAME_STACK_DEPTH = 3440;
        this.AUTO_NORMAL = 3456;
        this.MAP1_COLOR_4 = 3472;
        this.MAP1_INDEX = 3473;
        this.MAP1_NORMAL = 3474;
        this.MAP1_TEXTURE_COORD_1 = 3475;
        this.MAP1_TEXTURE_COORD_2 = 3476;
        this.MAP1_TEXTURE_COORD_3 = 3477;
        this.MAP1_TEXTURE_COORD_4 = 3478;
        this.MAP1_VERTEX_3 = 3479;
        this.MAP1_VERTEX_4 = 3480;
        this.MAP2_COLOR_4 = 3504;
        this.MAP2_INDEX = 3505;
        this.MAP2_NORMAL = 3506;
        this.MAP2_TEXTURE_COORD_1 = 3507;
        this.MAP2_TEXTURE_COORD_2 = 3508;
        this.MAP2_TEXTURE_COORD_3 = 3509;
        this.MAP2_TEXTURE_COORD_4 = 3510;
        this.MAP2_VERTEX_3 = 3511;
        this.MAP2_VERTEX_4 = 3512;
        this.MAP1_GRID_DOMAIN = 3536;
        this.MAP1_GRID_SEGMENTS = 3537;
        this.MAP2_GRID_DOMAIN = 3538;
        this.MAP2_GRID_SEGMENTS = 3539;
        this.TEXTURE_1D = 3552;
        this.TEXTURE_2D = 3553;
        this.FEEDBACK_BUFFER_POINTER = 3568;
        this.FEEDBACK_BUFFER_SIZE = 3569;
        this.FEEDBACK_BUFFER_TYPE = 3570;
        this.SELECTION_BUFFER_POINTER = 3571;
        this.SELECTION_BUFFER_SIZE = 3572;
        this.TEXTURE_WIDTH = 4096;
        this.TEXTURE_HEIGHT = 4097;
        this.TEXTURE_INTERNAL_FORMAT = 4099;
        this.TEXTURE_BORDER_COLOR = 4100;
        this.TEXTURE_BORDER = 4101;
        this.DONT_CARE = 4352;
        this.FASTEST = 4353;
        this.NICEST = 4354;
        this.LIGHT0 = 16384;
        this.LIGHT1 = 16385;
        this.LIGHT2 = 16386;
        this.LIGHT3 = 16387;
        this.LIGHT4 = 16388;
        this.LIGHT5 = 16389;
        this.LIGHT6 = 16390;
        this.LIGHT7 = 16391;
        this.AMBIENT = 4608;
        this.DIFFUSE = 4609;
        this.SPECULAR = 4610;
        this.POSITION = 4611;
        this.SPOT_DIRECTION = 4612;
        this.SPOT_EXPONENT = 4613;
        this.SPOT_CUTOFF = 4614;
        this.CONSTANT_ATTENUATION = 4615;
        this.LINEAR_ATTENUATION = 4616;
        this.QUADRATIC_ATTENUATION = 4617;
        this.COMPILE = 4864;
        this.COMPILE_AND_EXECUTE = 4865;
        this.CLEAR = 5376;
        this.AND = 5377;
        this.AND_REVERSE = 5378;
        this.COPY = 5379;
        this.AND_INVERTED = 5380;
        this.NOOP = 5381;
        this.XOR = 5382;
        this.OR = 5383;
        this.NOR = 5384;
        this.EQUIV = 5385;
        this.INVERT = 5386;
        this.OR_REVERSE = 5387;
        this.COPY_INVERTED = 5388;
        this.OR_INVERTED = 5389;
        this.NAND = 5390;
        this.SET = 5391;
        this.EMISSION = 5632;
        this.SHININESS = 5633;
        this.AMBIENT_AND_DIFFUSE = 5634;
        this.COLOR_INDEXES = 5635;
        this.MODELVIEW = 5888;
        this.PROJECTION = 5889;
        this.TEXTURE = 5890;
        this.COLOR = 6144;
        this.DEPTH = 6145;
        this.STENCIL = 6146;
        this.COLOR_INDEX = 6400;
        this.STENCIL_INDEX = 6401;
        this.DEPTH_COMPONENT = 6402;
        this.RED = 6403;
        this.GREEN = 6404;
        this.BLUE = 6405;
        this.ALPHA = 6406;
        this.RGB = 6407;
        this.RGBA = 6408;
        this.LUMINANCE = 6409;
        this.LUMINANCE_ALPHA = 6410;
        this.BITMAP = 6656;
        this.POINT = 6912;
        this.LINE = 6913;
        this.FILL = 6914;
        this.RENDER = 7168;
        this.FEEDBACK = 7169;
        this.SELECT = 7170;
        this.FLAT = 7424;
        this.SMOOTH = 7425;
        this.KEEP = 7680;
        this.REPLACE = 7681;
        this.INCR = 7682;
        this.DECR = 7683;
        this.VENDOR = 7936;
        this.RENDERER = 7937;
        this.VERSION = 7938;
        this.EXTENSIONS = 7939;
        this.S = 8192;
        this.T = 8193;
        this.R = 8194;
        this.Q = 8195;
        this.MODULATE = 8448;
        this.DECAL = 8449;
        this.TEXTURE_ENV_MODE = 8704;
        this.TEXTURE_ENV_COLOR = 8705;
        this.TEXTURE_ENV = 8960;
        this.EYE_LINEAR = 9216;
        this.OBJECT_LINEAR = 9217;
        this.SPHERE_MAP = 9218;
        this.TEXTURE_GEN_MODE = 9472;
        this.OBJECT_PLANE = 9473;
        this.EYE_PLANE = 9474;
        this.NEAREST = 9728;
        this.LINEAR = 9729;
        this.NEAREST_MIPMAP_NEAREST = 9984;
        this.LINEAR_MIPMAP_NEAREST = 9985;
        this.NEAREST_MIPMAP_LINEAR = 9986;
        this.LINEAR_MIPMAP_LINEAR = 9987;
        this.TEXTURE_MAG_FILTER = 10240;
        this.TEXTURE_MIN_FILTER = 10241;
        this.TEXTURE_WRAP_S = 10242;
        this.TEXTURE_WRAP_T = 10243;
        this.CLAMP = 10496;
        this.REPEAT = 10497;
        this.CLIENT_PIXEL_STORE_BIT = 1;
        this.CLIENT_VERTEX_ARRAY_BIT = 2;
        this.ALL_CLIENT_ATTRIB_BITS = -1;
        this.POLYGON_OFFSET_FACTOR = 32824;
        this.POLYGON_OFFSET_UNITS = 10752;
        this.POLYGON_OFFSET_POINT = 10753;
        this.POLYGON_OFFSET_LINE = 10754;
        this.POLYGON_OFFSET_FILL = 32823;
        this.ALPHA4 = 32827;
        this.ALPHA8 = 32828;
        this.ALPHA12 = 32829;
        this.ALPHA16 = 32830;
        this.LUMINANCE4 = 32831;
        this.LUMINANCE8 = 32832;
        this.LUMINANCE12 = 32833;
        this.LUMINANCE16 = 32834;
        this.LUMINANCE4_ALPHA4 = 32835;
        this.LUMINANCE6_ALPHA2 = 32836;
        this.LUMINANCE8_ALPHA8 = 32837;
        this.LUMINANCE12_ALPHA4 = 32838;
        this.LUMINANCE12_ALPHA12 = 32839;
        this.LUMINANCE16_ALPHA16 = 32840;
        this.INTENSITY = 32841;
        this.INTENSITY4 = 32842;
        this.INTENSITY8 = 32843;
        this.INTENSITY12 = 32844;
        this.INTENSITY16 = 32845;
        this.R3_G3_B2 = 10768;
        this.RGB4 = 32847;
        this.RGB5 = 32848;
        this.RGB8 = 32849;
        this.RGB10 = 32850;
        this.RGB12 = 32851;
        this.RGB16 = 32852;
        this.RGBA2 = 32853;
        this.RGBA4 = 32854;
        this.RGB5_A1 = 32855;
        this.RGBA8 = 32856;
        this.RGB10_A2 = 32857;
        this.RGBA12 = 32858;
        this.RGBA16 = 32859;
        this.TEXTURE_RED_SIZE = 32860;
        this.TEXTURE_GREEN_SIZE = 32861;
        this.TEXTURE_BLUE_SIZE = 32862;
        this.TEXTURE_ALPHA_SIZE = 32863;
        this.TEXTURE_LUMINANCE_SIZE = 32864;
        this.TEXTURE_INTENSITY_SIZE = 32865;
        this.PROXY_TEXTURE_1D = 32867;
        this.PROXY_TEXTURE_2D = 32868;
        this.TEXTURE_PRIORITY = 32870;
        this.TEXTURE_RESIDENT = 32871;
        this.TEXTURE_BINDING_1D = 32872;
        this.TEXTURE_BINDING_2D = 32873;
        this.VERTEX_ARRAY = 32884;
        this.NORMAL_ARRAY = 32885;
        this.COLOR_ARRAY = 32886;
        this.INDEX_ARRAY = 32887;
        this.TEXTURE_COORD_ARRAY = 32888;
        this.EDGE_FLAG_ARRAY = 32889;
        this.VERTEX_ARRAY_SIZE = 32890;
        this.VERTEX_ARRAY_TYPE = 32891;
        this.VERTEX_ARRAY_STRIDE = 32892;
        this.NORMAL_ARRAY_TYPE = 32894;
        this.NORMAL_ARRAY_STRIDE = 32895;
        this.COLOR_ARRAY_SIZE = 32897;
        this.COLOR_ARRAY_TYPE = 32898;
        this.COLOR_ARRAY_STRIDE = 32899;
        this.INDEX_ARRAY_TYPE = 32901;
        this.INDEX_ARRAY_STRIDE = 32902;
        this.TEXTURE_COORD_ARRAY_SIZE = 32904;
        this.TEXTURE_COORD_ARRAY_TYPE = 32905;
        this.TEXTURE_COORD_ARRAY_STRIDE = 32906;
        this.EDGE_FLAG_ARRAY_STRIDE = 32908;
        this.VERTEX_ARRAY_POINTER = 32910;
        this.NORMAL_ARRAY_POINTER = 32911;
        this.COLOR_ARRAY_POINTER = 32912;
        this.INDEX_ARRAY_POINTER = 32913;
        this.TEXTURE_COORD_ARRAY_POINTER = 32914;
        this.EDGE_FLAG_ARRAY_POINTER = 32915;
        this.V2F = 10784;
        this.V3F = 10785;
        this.C4UB_V2F = 10786;
        this.C4UB_V3F = 10787;
        this.C3F_V3F = 10788;
        this.N3F_V3F = 10789;
        this.C4F_N3F_V3F = 10790;
        this.T2F_V3F = 10791;
        this.T4F_V4F = 10792;
        this.T2F_C4UB_V3F = 10793;
        this.T2F_C3F_V3F = 10794;
        this.T2F_N3F_V3F = 10795;
        this.T2F_C4F_N3F_V3F = 10796;
        this.T4F_C4F_N3F_V4F = 10797;
        this.LOGIC_OP = 3057;
        this.TEXTURE_COMPONENTS = 4099;
    }
    
    public final int getACCUM() {
        return this.ACCUM;
    }
    
    public final int getLOAD() {
        return this.LOAD;
    }
    
    public final int getRETURN() {
        return this.RETURN;
    }
    
    public final int getMULT() {
        return this.MULT;
    }
    
    public final int getADD() {
        return this.ADD;
    }
    
    public final int getNEVER() {
        return this.NEVER;
    }
    
    public final int getLESS() {
        return this.LESS;
    }
    
    public final int getEQUAL() {
        return this.EQUAL;
    }
    
    public final int getLEQUAL() {
        return this.LEQUAL;
    }
    
    public final int getGREATER() {
        return this.GREATER;
    }
    
    public final int getNOTEQUAL() {
        return this.NOTEQUAL;
    }
    
    public final int getGEQUAL() {
        return this.GEQUAL;
    }
    
    public final int getALWAYS() {
        return this.ALWAYS;
    }
    
    public final int getCURRENT_BIT() {
        return this.CURRENT_BIT;
    }
    
    public final int getPOINT_BIT() {
        return this.POINT_BIT;
    }
    
    public final int getLINE_BIT() {
        return this.LINE_BIT;
    }
    
    public final int getPOLYGON_BIT() {
        return this.POLYGON_BIT;
    }
    
    public final int getPOLYGON_STIPPLE_BIT() {
        return this.POLYGON_STIPPLE_BIT;
    }
    
    public final int getPIXEL_MODE_BIT() {
        return this.PIXEL_MODE_BIT;
    }
    
    public final int getLIGHTING_BIT() {
        return this.LIGHTING_BIT;
    }
    
    public final int getFOG_BIT() {
        return this.FOG_BIT;
    }
    
    public final int getDEPTH_BUFFER_BIT() {
        return this.DEPTH_BUFFER_BIT;
    }
    
    public final int getACCUM_BUFFER_BIT() {
        return this.ACCUM_BUFFER_BIT;
    }
    
    public final int getSTENCIL_BUFFER_BIT() {
        return this.STENCIL_BUFFER_BIT;
    }
    
    public final int getVIEWPORT_BIT() {
        return this.VIEWPORT_BIT;
    }
    
    public final int getTRANSFORM_BIT() {
        return this.TRANSFORM_BIT;
    }
    
    public final int getENABLE_BIT() {
        return this.ENABLE_BIT;
    }
    
    public final int getCOLOR_BUFFER_BIT() {
        return this.COLOR_BUFFER_BIT;
    }
    
    public final int getHINT_BIT() {
        return this.HINT_BIT;
    }
    
    public final int getEVAL_BIT() {
        return this.EVAL_BIT;
    }
    
    public final int getLIST_BIT() {
        return this.LIST_BIT;
    }
    
    public final int getTEXTURE_BIT() {
        return this.TEXTURE_BIT;
    }
    
    public final int getSCISSOR_BIT() {
        return this.SCISSOR_BIT;
    }
    
    public final int getALL_ATTRIB_BITS() {
        return this.ALL_ATTRIB_BITS;
    }
    
    public final int getPOINTS() {
        return this.POINTS;
    }
    
    public final int getLINES() {
        return this.LINES;
    }
    
    public final int getLINE_LOOP() {
        return this.LINE_LOOP;
    }
    
    public final int getLINE_STRIP() {
        return this.LINE_STRIP;
    }
    
    public final int getTRIANGLES() {
        return this.TRIANGLES;
    }
    
    public final int getTRIANGLE_STRIP() {
        return this.TRIANGLE_STRIP;
    }
    
    public final int getTRIANGLE_FAN() {
        return this.TRIANGLE_FAN;
    }
    
    public final int getQUADS() {
        return this.QUADS;
    }
    
    public final int getQUAD_STRIP() {
        return this.QUAD_STRIP;
    }
    
    public final int getPOLYGON() {
        return this.POLYGON;
    }
    
    public final int getZERO() {
        return this.ZERO;
    }
    
    public final int getONE() {
        return this.ONE;
    }
    
    public final int getSRC_COLOR() {
        return this.SRC_COLOR;
    }
    
    public final int getONE_MINUS_SRC_COLOR() {
        return this.ONE_MINUS_SRC_COLOR;
    }
    
    public final int getSRC_ALPHA() {
        return this.SRC_ALPHA;
    }
    
    public final int getONE_MINUS_SRC_ALPHA() {
        return this.ONE_MINUS_SRC_ALPHA;
    }
    
    public final int getDST_ALPHA() {
        return this.DST_ALPHA;
    }
    
    public final int getONE_MINUS_DST_ALPHA() {
        return this.ONE_MINUS_DST_ALPHA;
    }
    
    public final int getDST_COLOR() {
        return this.DST_COLOR;
    }
    
    public final int getONE_MINUS_DST_COLOR() {
        return this.ONE_MINUS_DST_COLOR;
    }
    
    public final int getSRC_ALPHA_SATURATE() {
        return this.SRC_ALPHA_SATURATE;
    }
    
    public final int getCONSTANT_COLOR() {
        return this.CONSTANT_COLOR;
    }
    
    public final int getONE_MINUS_CONSTANT_COLOR() {
        return this.ONE_MINUS_CONSTANT_COLOR;
    }
    
    public final int getCONSTANT_ALPHA() {
        return this.CONSTANT_ALPHA;
    }
    
    public final int getONE_MINUS_CONSTANT_ALPHA() {
        return this.ONE_MINUS_CONSTANT_ALPHA;
    }
    
    public final int getTRUE() {
        return this.TRUE;
    }
    
    public final int getFALSE() {
        return this.FALSE;
    }
    
    public final int getCLIP_PLANE0() {
        return this.CLIP_PLANE0;
    }
    
    public final int getCLIP_PLANE1() {
        return this.CLIP_PLANE1;
    }
    
    public final int getCLIP_PLANE2() {
        return this.CLIP_PLANE2;
    }
    
    public final int getCLIP_PLANE3() {
        return this.CLIP_PLANE3;
    }
    
    public final int getCLIP_PLANE4() {
        return this.CLIP_PLANE4;
    }
    
    public final int getCLIP_PLANE5() {
        return this.CLIP_PLANE5;
    }
    
    public final int getBYTE() {
        return this.BYTE;
    }
    
    public final int getUNSIGNED_BYTE() {
        return this.UNSIGNED_BYTE;
    }
    
    public final int getSHORT() {
        return this.SHORT;
    }
    
    public final int getUNSIGNED_SHORT() {
        return this.UNSIGNED_SHORT;
    }
    
    public final int getINT() {
        return this.INT;
    }
    
    public final int getUNSIGNED_INT() {
        return this.UNSIGNED_INT;
    }
    
    public final int getFLOAT() {
        return this.FLOAT;
    }
    
    public final int getGL_2_BYTES() {
        return this.GL_2_BYTES;
    }
    
    public final int getGL_3_BYTES() {
        return this.GL_3_BYTES;
    }
    
    public final int getGL_4_BYTES() {
        return this.GL_4_BYTES;
    }
    
    public final int getDOUBLE() {
        return this.DOUBLE;
    }
    
    public final int getNONE() {
        return this.NONE;
    }
    
    public final int getFRONT_LEFT() {
        return this.FRONT_LEFT;
    }
    
    public final int getFRONT_RIGHT() {
        return this.FRONT_RIGHT;
    }
    
    public final int getBACK_LEFT() {
        return this.BACK_LEFT;
    }
    
    public final int getBACK_RIGHT() {
        return this.BACK_RIGHT;
    }
    
    public final int getFRONT() {
        return this.FRONT;
    }
    
    public final int getBACK() {
        return this.BACK;
    }
    
    public final int getLEFT() {
        return this.LEFT;
    }
    
    public final int getRIGHT() {
        return this.RIGHT;
    }
    
    public final int getFRONT_AND_BACK() {
        return this.FRONT_AND_BACK;
    }
    
    public final int getAUX0() {
        return this.AUX0;
    }
    
    public final int getAUX1() {
        return this.AUX1;
    }
    
    public final int getAUX2() {
        return this.AUX2;
    }
    
    public final int getAUX3() {
        return this.AUX3;
    }
    
    public final int getNO_ERROR() {
        return this.NO_ERROR;
    }
    
    public final int getINVALID_ENUM() {
        return this.INVALID_ENUM;
    }
    
    public final int getINVALID_VALUE() {
        return this.INVALID_VALUE;
    }
    
    public final int getINVALID_OPERATION() {
        return this.INVALID_OPERATION;
    }
    
    public final int getSTACK_OVERFLOW() {
        return this.STACK_OVERFLOW;
    }
    
    public final int getSTACK_UNDERFLOW() {
        return this.STACK_UNDERFLOW;
    }
    
    public final int getOUT_OF_MEMORY() {
        return this.OUT_OF_MEMORY;
    }
    
    public final int getGL_2D() {
        return this.GL_2D;
    }
    
    public final int getGL_3D() {
        return this.GL_3D;
    }
    
    public final int getGL_3D_COLOR() {
        return this.GL_3D_COLOR;
    }
    
    public final int getGL_3D_COLOR_TEXTURE() {
        return this.GL_3D_COLOR_TEXTURE;
    }
    
    public final int getGL_4D_COLOR_TEXTURE() {
        return this.GL_4D_COLOR_TEXTURE;
    }
    
    public final int getPASS_THROUGH_TOKEN() {
        return this.PASS_THROUGH_TOKEN;
    }
    
    public final int getPOINT_TOKEN() {
        return this.POINT_TOKEN;
    }
    
    public final int getLINE_TOKEN() {
        return this.LINE_TOKEN;
    }
    
    public final int getPOLYGON_TOKEN() {
        return this.POLYGON_TOKEN;
    }
    
    public final int getBITMAP_TOKEN() {
        return this.BITMAP_TOKEN;
    }
    
    public final int getDRAW_PIXEL_TOKEN() {
        return this.DRAW_PIXEL_TOKEN;
    }
    
    public final int getCOPY_PIXEL_TOKEN() {
        return this.COPY_PIXEL_TOKEN;
    }
    
    public final int getLINE_RESET_TOKEN() {
        return this.LINE_RESET_TOKEN;
    }
    
    public final int getEXP() {
        return this.EXP;
    }
    
    public final int getEXP2() {
        return this.EXP2;
    }
    
    public final int getCW() {
        return this.CW;
    }
    
    public final int getCCW() {
        return this.CCW;
    }
    
    public final int getCOEFF() {
        return this.COEFF;
    }
    
    public final int getORDER() {
        return this.ORDER;
    }
    
    public final int getDOMAIN() {
        return this.DOMAIN;
    }
    
    public final int getCURRENT_COLOR() {
        return this.CURRENT_COLOR;
    }
    
    public final int getCURRENT_INDEX() {
        return this.CURRENT_INDEX;
    }
    
    public final int getCURRENT_NORMAL() {
        return this.CURRENT_NORMAL;
    }
    
    public final int getCURRENT_TEXTURE_COORDS() {
        return this.CURRENT_TEXTURE_COORDS;
    }
    
    public final int getCURRENT_RASTER_COLOR() {
        return this.CURRENT_RASTER_COLOR;
    }
    
    public final int getCURRENT_RASTER_INDEX() {
        return this.CURRENT_RASTER_INDEX;
    }
    
    public final int getCURRENT_RASTER_TEXTURE_COORDS() {
        return this.CURRENT_RASTER_TEXTURE_COORDS;
    }
    
    public final int getCURRENT_RASTER_POSITION() {
        return this.CURRENT_RASTER_POSITION;
    }
    
    public final int getCURRENT_RASTER_POSITION_VALID() {
        return this.CURRENT_RASTER_POSITION_VALID;
    }
    
    public final int getCURRENT_RASTER_DISTANCE() {
        return this.CURRENT_RASTER_DISTANCE;
    }
    
    public final int getPOINT_SMOOTH() {
        return this.POINT_SMOOTH;
    }
    
    public final int getPOINT_SIZE() {
        return this.POINT_SIZE;
    }
    
    public final int getPOINT_SIZE_RANGE() {
        return this.POINT_SIZE_RANGE;
    }
    
    public final int getPOINT_SIZE_GRANULARITY() {
        return this.POINT_SIZE_GRANULARITY;
    }
    
    public final int getLINE_SMOOTH() {
        return this.LINE_SMOOTH;
    }
    
    public final int getLINE_WIDTH() {
        return this.LINE_WIDTH;
    }
    
    public final int getLINE_WIDTH_RANGE() {
        return this.LINE_WIDTH_RANGE;
    }
    
    public final int getLINE_WIDTH_GRANULARITY() {
        return this.LINE_WIDTH_GRANULARITY;
    }
    
    public final int getLINE_STIPPLE() {
        return this.LINE_STIPPLE;
    }
    
    public final int getLINE_STIPPLE_PATTERN() {
        return this.LINE_STIPPLE_PATTERN;
    }
    
    public final int getLINE_STIPPLE_REPEAT() {
        return this.LINE_STIPPLE_REPEAT;
    }
    
    public final int getLIST_MODE() {
        return this.LIST_MODE;
    }
    
    public final int getMAX_LIST_NESTING() {
        return this.MAX_LIST_NESTING;
    }
    
    public final int getLIST_BASE() {
        return this.LIST_BASE;
    }
    
    public final int getLIST_INDEX() {
        return this.LIST_INDEX;
    }
    
    public final int getPOLYGON_MODE() {
        return this.POLYGON_MODE;
    }
    
    public final int getPOLYGON_SMOOTH() {
        return this.POLYGON_SMOOTH;
    }
    
    public final int getPOLYGON_STIPPLE() {
        return this.POLYGON_STIPPLE;
    }
    
    public final int getEDGE_FLAG() {
        return this.EDGE_FLAG;
    }
    
    public final int getCULL_FACE() {
        return this.CULL_FACE;
    }
    
    public final int getCULL_FACE_MODE() {
        return this.CULL_FACE_MODE;
    }
    
    public final int getFRONT_FACE() {
        return this.FRONT_FACE;
    }
    
    public final int getLIGHTING() {
        return this.LIGHTING;
    }
    
    public final int getLIGHT_MODEL_LOCAL_VIEWER() {
        return this.LIGHT_MODEL_LOCAL_VIEWER;
    }
    
    public final int getLIGHT_MODEL_TWO_SIDE() {
        return this.LIGHT_MODEL_TWO_SIDE;
    }
    
    public final int getLIGHT_MODEL_AMBIENT() {
        return this.LIGHT_MODEL_AMBIENT;
    }
    
    public final int getSHADE_MODEL() {
        return this.SHADE_MODEL;
    }
    
    public final int getCOLOR_MATERIAL_FACE() {
        return this.COLOR_MATERIAL_FACE;
    }
    
    public final int getCOLOR_MATERIAL_PARAMETER() {
        return this.COLOR_MATERIAL_PARAMETER;
    }
    
    public final int getCOLOR_MATERIAL() {
        return this.COLOR_MATERIAL;
    }
    
    public final int getFOG() {
        return this.FOG;
    }
    
    public final int getFOG_INDEX() {
        return this.FOG_INDEX;
    }
    
    public final int getFOG_DENSITY() {
        return this.FOG_DENSITY;
    }
    
    public final int getFOG_START() {
        return this.FOG_START;
    }
    
    public final int getFOG_END() {
        return this.FOG_END;
    }
    
    public final int getFOG_MODE() {
        return this.FOG_MODE;
    }
    
    public final int getFOG_COLOR() {
        return this.FOG_COLOR;
    }
    
    public final int getDEPTH_RANGE() {
        return this.DEPTH_RANGE;
    }
    
    public final int getDEPTH_TEST() {
        return this.DEPTH_TEST;
    }
    
    public final int getDEPTH_WRITEMASK() {
        return this.DEPTH_WRITEMASK;
    }
    
    public final int getDEPTH_CLEAR_VALUE() {
        return this.DEPTH_CLEAR_VALUE;
    }
    
    public final int getDEPTH_FUNC() {
        return this.DEPTH_FUNC;
    }
    
    public final int getACCUM_CLEAR_VALUE() {
        return this.ACCUM_CLEAR_VALUE;
    }
    
    public final int getSTENCIL_TEST() {
        return this.STENCIL_TEST;
    }
    
    public final int getSTENCIL_CLEAR_VALUE() {
        return this.STENCIL_CLEAR_VALUE;
    }
    
    public final int getSTENCIL_FUNC() {
        return this.STENCIL_FUNC;
    }
    
    public final int getSTENCIL_VALUE_MASK() {
        return this.STENCIL_VALUE_MASK;
    }
    
    public final int getSTENCIL_FAIL() {
        return this.STENCIL_FAIL;
    }
    
    public final int getSTENCIL_PASS_DEPTH_FAIL() {
        return this.STENCIL_PASS_DEPTH_FAIL;
    }
    
    public final int getSTENCIL_PASS_DEPTH_PASS() {
        return this.STENCIL_PASS_DEPTH_PASS;
    }
    
    public final int getSTENCIL_REF() {
        return this.STENCIL_REF;
    }
    
    public final int getSTENCIL_WRITEMASK() {
        return this.STENCIL_WRITEMASK;
    }
    
    public final int getMATRIX_MODE() {
        return this.MATRIX_MODE;
    }
    
    public final int getNORMALIZE() {
        return this.NORMALIZE;
    }
    
    public final int getVIEWPORT() {
        return this.VIEWPORT;
    }
    
    public final int getMODELVIEW_STACK_DEPTH() {
        return this.MODELVIEW_STACK_DEPTH;
    }
    
    public final int getPROJECTION_STACK_DEPTH() {
        return this.PROJECTION_STACK_DEPTH;
    }
    
    public final int getTEXTURE_STACK_DEPTH() {
        return this.TEXTURE_STACK_DEPTH;
    }
    
    public final int getMODELVIEW_MATRIX() {
        return this.MODELVIEW_MATRIX;
    }
    
    public final int getPROJECTION_MATRIX() {
        return this.PROJECTION_MATRIX;
    }
    
    public final int getTEXTURE_MATRIX() {
        return this.TEXTURE_MATRIX;
    }
    
    public final int getATTRIB_STACK_DEPTH() {
        return this.ATTRIB_STACK_DEPTH;
    }
    
    public final int getCLIENT_ATTRIB_STACK_DEPTH() {
        return this.CLIENT_ATTRIB_STACK_DEPTH;
    }
    
    public final int getALPHA_TEST() {
        return this.ALPHA_TEST;
    }
    
    public final int getALPHA_TEST_FUNC() {
        return this.ALPHA_TEST_FUNC;
    }
    
    public final int getALPHA_TEST_REF() {
        return this.ALPHA_TEST_REF;
    }
    
    public final int getDITHER() {
        return this.DITHER;
    }
    
    public final int getBLEND_DST() {
        return this.BLEND_DST;
    }
    
    public final int getBLEND_SRC() {
        return this.BLEND_SRC;
    }
    
    public final int getBLEND() {
        return this.BLEND;
    }
    
    public final int getLOGIC_OP_MODE() {
        return this.LOGIC_OP_MODE;
    }
    
    public final int getINDEX_LOGIC_OP() {
        return this.INDEX_LOGIC_OP;
    }
    
    public final int getCOLOR_LOGIC_OP() {
        return this.COLOR_LOGIC_OP;
    }
    
    public final int getAUX_BUFFERS() {
        return this.AUX_BUFFERS;
    }
    
    public final int getDRAW_BUFFER() {
        return this.DRAW_BUFFER;
    }
    
    public final int getREAD_BUFFER() {
        return this.READ_BUFFER;
    }
    
    public final int getSCISSOR_BOX() {
        return this.SCISSOR_BOX;
    }
    
    public final int getSCISSOR_TEST() {
        return this.SCISSOR_TEST;
    }
    
    public final int getINDEX_CLEAR_VALUE() {
        return this.INDEX_CLEAR_VALUE;
    }
    
    public final int getINDEX_WRITEMASK() {
        return this.INDEX_WRITEMASK;
    }
    
    public final int getCOLOR_CLEAR_VALUE() {
        return this.COLOR_CLEAR_VALUE;
    }
    
    public final int getCOLOR_WRITEMASK() {
        return this.COLOR_WRITEMASK;
    }
    
    public final int getINDEX_MODE() {
        return this.INDEX_MODE;
    }
    
    public final int getRGBA_MODE() {
        return this.RGBA_MODE;
    }
    
    public final int getDOUBLEBUFFER() {
        return this.DOUBLEBUFFER;
    }
    
    public final int getSTEREO() {
        return this.STEREO;
    }
    
    public final int getRENDER_MODE() {
        return this.RENDER_MODE;
    }
    
    public final int getPERSPECTIVE_CORRECTION_HINT() {
        return this.PERSPECTIVE_CORRECTION_HINT;
    }
    
    public final int getPOINT_SMOOTH_HINT() {
        return this.POINT_SMOOTH_HINT;
    }
    
    public final int getLINE_SMOOTH_HINT() {
        return this.LINE_SMOOTH_HINT;
    }
    
    public final int getPOLYGON_SMOOTH_HINT() {
        return this.POLYGON_SMOOTH_HINT;
    }
    
    public final int getFOG_HINT() {
        return this.FOG_HINT;
    }
    
    public final int getTEXTURE_GEN_S() {
        return this.TEXTURE_GEN_S;
    }
    
    public final int getTEXTURE_GEN_T() {
        return this.TEXTURE_GEN_T;
    }
    
    public final int getTEXTURE_GEN_R() {
        return this.TEXTURE_GEN_R;
    }
    
    public final int getTEXTURE_GEN_Q() {
        return this.TEXTURE_GEN_Q;
    }
    
    public final int getPIXEL_MAP_I_TO_I() {
        return this.PIXEL_MAP_I_TO_I;
    }
    
    public final int getPIXEL_MAP_S_TO_S() {
        return this.PIXEL_MAP_S_TO_S;
    }
    
    public final int getPIXEL_MAP_I_TO_R() {
        return this.PIXEL_MAP_I_TO_R;
    }
    
    public final int getPIXEL_MAP_I_TO_G() {
        return this.PIXEL_MAP_I_TO_G;
    }
    
    public final int getPIXEL_MAP_I_TO_B() {
        return this.PIXEL_MAP_I_TO_B;
    }
    
    public final int getPIXEL_MAP_I_TO_A() {
        return this.PIXEL_MAP_I_TO_A;
    }
    
    public final int getPIXEL_MAP_R_TO_R() {
        return this.PIXEL_MAP_R_TO_R;
    }
    
    public final int getPIXEL_MAP_G_TO_G() {
        return this.PIXEL_MAP_G_TO_G;
    }
    
    public final int getPIXEL_MAP_B_TO_B() {
        return this.PIXEL_MAP_B_TO_B;
    }
    
    public final int getPIXEL_MAP_A_TO_A() {
        return this.PIXEL_MAP_A_TO_A;
    }
    
    public final int getPIXEL_MAP_I_TO_I_SIZE() {
        return this.PIXEL_MAP_I_TO_I_SIZE;
    }
    
    public final int getPIXEL_MAP_S_TO_S_SIZE() {
        return this.PIXEL_MAP_S_TO_S_SIZE;
    }
    
    public final int getPIXEL_MAP_I_TO_R_SIZE() {
        return this.PIXEL_MAP_I_TO_R_SIZE;
    }
    
    public final int getPIXEL_MAP_I_TO_G_SIZE() {
        return this.PIXEL_MAP_I_TO_G_SIZE;
    }
    
    public final int getPIXEL_MAP_I_TO_B_SIZE() {
        return this.PIXEL_MAP_I_TO_B_SIZE;
    }
    
    public final int getPIXEL_MAP_I_TO_A_SIZE() {
        return this.PIXEL_MAP_I_TO_A_SIZE;
    }
    
    public final int getPIXEL_MAP_R_TO_R_SIZE() {
        return this.PIXEL_MAP_R_TO_R_SIZE;
    }
    
    public final int getPIXEL_MAP_G_TO_G_SIZE() {
        return this.PIXEL_MAP_G_TO_G_SIZE;
    }
    
    public final int getPIXEL_MAP_B_TO_B_SIZE() {
        return this.PIXEL_MAP_B_TO_B_SIZE;
    }
    
    public final int getPIXEL_MAP_A_TO_A_SIZE() {
        return this.PIXEL_MAP_A_TO_A_SIZE;
    }
    
    public final int getUNPACK_SWAP_BYTES() {
        return this.UNPACK_SWAP_BYTES;
    }
    
    public final int getUNPACK_LSB_FIRST() {
        return this.UNPACK_LSB_FIRST;
    }
    
    public final int getUNPACK_ROW_LENGTH() {
        return this.UNPACK_ROW_LENGTH;
    }
    
    public final int getUNPACK_SKIP_ROWS() {
        return this.UNPACK_SKIP_ROWS;
    }
    
    public final int getUNPACK_SKIP_PIXELS() {
        return this.UNPACK_SKIP_PIXELS;
    }
    
    public final int getUNPACK_ALIGNMENT() {
        return this.UNPACK_ALIGNMENT;
    }
    
    public final int getPACK_SWAP_BYTES() {
        return this.PACK_SWAP_BYTES;
    }
    
    public final int getPACK_LSB_FIRST() {
        return this.PACK_LSB_FIRST;
    }
    
    public final int getPACK_ROW_LENGTH() {
        return this.PACK_ROW_LENGTH;
    }
    
    public final int getPACK_SKIP_ROWS() {
        return this.PACK_SKIP_ROWS;
    }
    
    public final int getPACK_SKIP_PIXELS() {
        return this.PACK_SKIP_PIXELS;
    }
    
    public final int getPACK_ALIGNMENT() {
        return this.PACK_ALIGNMENT;
    }
    
    public final int getMAP_COLOR() {
        return this.MAP_COLOR;
    }
    
    public final int getMAP_STENCIL() {
        return this.MAP_STENCIL;
    }
    
    public final int getINDEX_SHIFT() {
        return this.INDEX_SHIFT;
    }
    
    public final int getINDEX_OFFSET() {
        return this.INDEX_OFFSET;
    }
    
    public final int getRED_SCALE() {
        return this.RED_SCALE;
    }
    
    public final int getRED_BIAS() {
        return this.RED_BIAS;
    }
    
    public final int getZOOM_X() {
        return this.ZOOM_X;
    }
    
    public final int getZOOM_Y() {
        return this.ZOOM_Y;
    }
    
    public final int getGREEN_SCALE() {
        return this.GREEN_SCALE;
    }
    
    public final int getGREEN_BIAS() {
        return this.GREEN_BIAS;
    }
    
    public final int getBLUE_SCALE() {
        return this.BLUE_SCALE;
    }
    
    public final int getBLUE_BIAS() {
        return this.BLUE_BIAS;
    }
    
    public final int getALPHA_SCALE() {
        return this.ALPHA_SCALE;
    }
    
    public final int getALPHA_BIAS() {
        return this.ALPHA_BIAS;
    }
    
    public final int getDEPTH_SCALE() {
        return this.DEPTH_SCALE;
    }
    
    public final int getDEPTH_BIAS() {
        return this.DEPTH_BIAS;
    }
    
    public final int getMAX_EVAL_ORDER() {
        return this.MAX_EVAL_ORDER;
    }
    
    public final int getMAX_LIGHTS() {
        return this.MAX_LIGHTS;
    }
    
    public final int getMAX_CLIP_PLANES() {
        return this.MAX_CLIP_PLANES;
    }
    
    public final int getMAX_TEXTURE_SIZE() {
        return this.MAX_TEXTURE_SIZE;
    }
    
    public final int getMAX_PIXEL_MAP_TABLE() {
        return this.MAX_PIXEL_MAP_TABLE;
    }
    
    public final int getMAX_ATTRIB_STACK_DEPTH() {
        return this.MAX_ATTRIB_STACK_DEPTH;
    }
    
    public final int getMAX_MODELVIEW_STACK_DEPTH() {
        return this.MAX_MODELVIEW_STACK_DEPTH;
    }
    
    public final int getMAX_NAME_STACK_DEPTH() {
        return this.MAX_NAME_STACK_DEPTH;
    }
    
    public final int getMAX_PROJECTION_STACK_DEPTH() {
        return this.MAX_PROJECTION_STACK_DEPTH;
    }
    
    public final int getMAX_TEXTURE_STACK_DEPTH() {
        return this.MAX_TEXTURE_STACK_DEPTH;
    }
    
    public final int getMAX_VIEWPORT_DIMS() {
        return this.MAX_VIEWPORT_DIMS;
    }
    
    public final int getMAX_CLIENT_ATTRIB_STACK_DEPTH() {
        return this.MAX_CLIENT_ATTRIB_STACK_DEPTH;
    }
    
    public final int getSUBPIXEL_BITS() {
        return this.SUBPIXEL_BITS;
    }
    
    public final int getINDEX_BITS() {
        return this.INDEX_BITS;
    }
    
    public final int getRED_BITS() {
        return this.RED_BITS;
    }
    
    public final int getGREEN_BITS() {
        return this.GREEN_BITS;
    }
    
    public final int getBLUE_BITS() {
        return this.BLUE_BITS;
    }
    
    public final int getALPHA_BITS() {
        return this.ALPHA_BITS;
    }
    
    public final int getDEPTH_BITS() {
        return this.DEPTH_BITS;
    }
    
    public final int getSTENCIL_BITS() {
        return this.STENCIL_BITS;
    }
    
    public final int getACCUM_RED_BITS() {
        return this.ACCUM_RED_BITS;
    }
    
    public final int getACCUM_GREEN_BITS() {
        return this.ACCUM_GREEN_BITS;
    }
    
    public final int getACCUM_BLUE_BITS() {
        return this.ACCUM_BLUE_BITS;
    }
    
    public final int getACCUM_ALPHA_BITS() {
        return this.ACCUM_ALPHA_BITS;
    }
    
    public final int getNAME_STACK_DEPTH() {
        return this.NAME_STACK_DEPTH;
    }
    
    public final int getAUTO_NORMAL() {
        return this.AUTO_NORMAL;
    }
    
    public final int getMAP1_COLOR_4() {
        return this.MAP1_COLOR_4;
    }
    
    public final int getMAP1_INDEX() {
        return this.MAP1_INDEX;
    }
    
    public final int getMAP1_NORMAL() {
        return this.MAP1_NORMAL;
    }
    
    public final int getMAP1_TEXTURE_COORD_1() {
        return this.MAP1_TEXTURE_COORD_1;
    }
    
    public final int getMAP1_TEXTURE_COORD_2() {
        return this.MAP1_TEXTURE_COORD_2;
    }
    
    public final int getMAP1_TEXTURE_COORD_3() {
        return this.MAP1_TEXTURE_COORD_3;
    }
    
    public final int getMAP1_TEXTURE_COORD_4() {
        return this.MAP1_TEXTURE_COORD_4;
    }
    
    public final int getMAP1_VERTEX_3() {
        return this.MAP1_VERTEX_3;
    }
    
    public final int getMAP1_VERTEX_4() {
        return this.MAP1_VERTEX_4;
    }
    
    public final int getMAP2_COLOR_4() {
        return this.MAP2_COLOR_4;
    }
    
    public final int getMAP2_INDEX() {
        return this.MAP2_INDEX;
    }
    
    public final int getMAP2_NORMAL() {
        return this.MAP2_NORMAL;
    }
    
    public final int getMAP2_TEXTURE_COORD_1() {
        return this.MAP2_TEXTURE_COORD_1;
    }
    
    public final int getMAP2_TEXTURE_COORD_2() {
        return this.MAP2_TEXTURE_COORD_2;
    }
    
    public final int getMAP2_TEXTURE_COORD_3() {
        return this.MAP2_TEXTURE_COORD_3;
    }
    
    public final int getMAP2_TEXTURE_COORD_4() {
        return this.MAP2_TEXTURE_COORD_4;
    }
    
    public final int getMAP2_VERTEX_3() {
        return this.MAP2_VERTEX_3;
    }
    
    public final int getMAP2_VERTEX_4() {
        return this.MAP2_VERTEX_4;
    }
    
    public final int getMAP1_GRID_DOMAIN() {
        return this.MAP1_GRID_DOMAIN;
    }
    
    public final int getMAP1_GRID_SEGMENTS() {
        return this.MAP1_GRID_SEGMENTS;
    }
    
    public final int getMAP2_GRID_DOMAIN() {
        return this.MAP2_GRID_DOMAIN;
    }
    
    public final int getMAP2_GRID_SEGMENTS() {
        return this.MAP2_GRID_SEGMENTS;
    }
    
    public final int getTEXTURE_1D() {
        return this.TEXTURE_1D;
    }
    
    public final int getTEXTURE_2D() {
        return this.TEXTURE_2D;
    }
    
    public final int getFEEDBACK_BUFFER_POINTER() {
        return this.FEEDBACK_BUFFER_POINTER;
    }
    
    public final int getFEEDBACK_BUFFER_SIZE() {
        return this.FEEDBACK_BUFFER_SIZE;
    }
    
    public final int getFEEDBACK_BUFFER_TYPE() {
        return this.FEEDBACK_BUFFER_TYPE;
    }
    
    public final int getSELECTION_BUFFER_POINTER() {
        return this.SELECTION_BUFFER_POINTER;
    }
    
    public final int getSELECTION_BUFFER_SIZE() {
        return this.SELECTION_BUFFER_SIZE;
    }
    
    public final int getTEXTURE_WIDTH() {
        return this.TEXTURE_WIDTH;
    }
    
    public final int getTEXTURE_HEIGHT() {
        return this.TEXTURE_HEIGHT;
    }
    
    public final int getTEXTURE_INTERNAL_FORMAT() {
        return this.TEXTURE_INTERNAL_FORMAT;
    }
    
    public final int getTEXTURE_BORDER_COLOR() {
        return this.TEXTURE_BORDER_COLOR;
    }
    
    public final int getTEXTURE_BORDER() {
        return this.TEXTURE_BORDER;
    }
    
    public final int getDONT_CARE() {
        return this.DONT_CARE;
    }
    
    public final int getFASTEST() {
        return this.FASTEST;
    }
    
    public final int getNICEST() {
        return this.NICEST;
    }
    
    public final int getLIGHT0() {
        return this.LIGHT0;
    }
    
    public final int getLIGHT1() {
        return this.LIGHT1;
    }
    
    public final int getLIGHT2() {
        return this.LIGHT2;
    }
    
    public final int getLIGHT3() {
        return this.LIGHT3;
    }
    
    public final int getLIGHT4() {
        return this.LIGHT4;
    }
    
    public final int getLIGHT5() {
        return this.LIGHT5;
    }
    
    public final int getLIGHT6() {
        return this.LIGHT6;
    }
    
    public final int getLIGHT7() {
        return this.LIGHT7;
    }
    
    public final int getAMBIENT() {
        return this.AMBIENT;
    }
    
    public final int getDIFFUSE() {
        return this.DIFFUSE;
    }
    
    public final int getSPECULAR() {
        return this.SPECULAR;
    }
    
    public final int getPOSITION() {
        return this.POSITION;
    }
    
    public final int getSPOT_DIRECTION() {
        return this.SPOT_DIRECTION;
    }
    
    public final int getSPOT_EXPONENT() {
        return this.SPOT_EXPONENT;
    }
    
    public final int getSPOT_CUTOFF() {
        return this.SPOT_CUTOFF;
    }
    
    public final int getCONSTANT_ATTENUATION() {
        return this.CONSTANT_ATTENUATION;
    }
    
    public final int getLINEAR_ATTENUATION() {
        return this.LINEAR_ATTENUATION;
    }
    
    public final int getQUADRATIC_ATTENUATION() {
        return this.QUADRATIC_ATTENUATION;
    }
    
    public final int getCOMPILE() {
        return this.COMPILE;
    }
    
    public final int getCOMPILE_AND_EXECUTE() {
        return this.COMPILE_AND_EXECUTE;
    }
    
    public final int getCLEAR() {
        return this.CLEAR;
    }
    
    public final int getAND() {
        return this.AND;
    }
    
    public final int getAND_REVERSE() {
        return this.AND_REVERSE;
    }
    
    public final int getCOPY() {
        return this.COPY;
    }
    
    public final int getAND_INVERTED() {
        return this.AND_INVERTED;
    }
    
    public final int getNOOP() {
        return this.NOOP;
    }
    
    public final int getXOR() {
        return this.XOR;
    }
    
    public final int getOR() {
        return this.OR;
    }
    
    public final int getNOR() {
        return this.NOR;
    }
    
    public final int getEQUIV() {
        return this.EQUIV;
    }
    
    public final int getINVERT() {
        return this.INVERT;
    }
    
    public final int getOR_REVERSE() {
        return this.OR_REVERSE;
    }
    
    public final int getCOPY_INVERTED() {
        return this.COPY_INVERTED;
    }
    
    public final int getOR_INVERTED() {
        return this.OR_INVERTED;
    }
    
    public final int getNAND() {
        return this.NAND;
    }
    
    public final int getSET() {
        return this.SET;
    }
    
    public final int getEMISSION() {
        return this.EMISSION;
    }
    
    public final int getSHININESS() {
        return this.SHININESS;
    }
    
    public final int getAMBIENT_AND_DIFFUSE() {
        return this.AMBIENT_AND_DIFFUSE;
    }
    
    public final int getCOLOR_INDEXES() {
        return this.COLOR_INDEXES;
    }
    
    public final int getMODELVIEW() {
        return this.MODELVIEW;
    }
    
    public final int getPROJECTION() {
        return this.PROJECTION;
    }
    
    public final int getTEXTURE() {
        return this.TEXTURE;
    }
    
    public final int getCOLOR() {
        return this.COLOR;
    }
    
    public final int getDEPTH() {
        return this.DEPTH;
    }
    
    public final int getSTENCIL() {
        return this.STENCIL;
    }
    
    public final int getCOLOR_INDEX() {
        return this.COLOR_INDEX;
    }
    
    public final int getSTENCIL_INDEX() {
        return this.STENCIL_INDEX;
    }
    
    public final int getDEPTH_COMPONENT() {
        return this.DEPTH_COMPONENT;
    }
    
    public final int getRED() {
        return this.RED;
    }
    
    public final int getGREEN() {
        return this.GREEN;
    }
    
    public final int getBLUE() {
        return this.BLUE;
    }
    
    public final int getALPHA() {
        return this.ALPHA;
    }
    
    public final int getRGB() {
        return this.RGB;
    }
    
    public final int getRGBA() {
        return this.RGBA;
    }
    
    public final int getLUMINANCE() {
        return this.LUMINANCE;
    }
    
    public final int getLUMINANCE_ALPHA() {
        return this.LUMINANCE_ALPHA;
    }
    
    public final int getBITMAP() {
        return this.BITMAP;
    }
    
    public final int getPOINT() {
        return this.POINT;
    }
    
    public final int getLINE() {
        return this.LINE;
    }
    
    public final int getFILL() {
        return this.FILL;
    }
    
    public final int getRENDER() {
        return this.RENDER;
    }
    
    public final int getFEEDBACK() {
        return this.FEEDBACK;
    }
    
    public final int getSELECT() {
        return this.SELECT;
    }
    
    public final int getFLAT() {
        return this.FLAT;
    }
    
    public final int getSMOOTH() {
        return this.SMOOTH;
    }
    
    public final int getKEEP() {
        return this.KEEP;
    }
    
    public final int getREPLACE() {
        return this.REPLACE;
    }
    
    public final int getINCR() {
        return this.INCR;
    }
    
    public final int getDECR() {
        return this.DECR;
    }
    
    public final int getVENDOR() {
        return this.VENDOR;
    }
    
    public final int getRENDERER() {
        return this.RENDERER;
    }
    
    public final int getVERSION() {
        return this.VERSION;
    }
    
    public final int getEXTENSIONS() {
        return this.EXTENSIONS;
    }
    
    public final int getS() {
        return this.S;
    }
    
    public final int getT() {
        return this.T;
    }
    
    public final int getR() {
        return this.R;
    }
    
    public final int getQ() {
        return this.Q;
    }
    
    public final int getMODULATE() {
        return this.MODULATE;
    }
    
    public final int getDECAL() {
        return this.DECAL;
    }
    
    public final int getTEXTURE_ENV_MODE() {
        return this.TEXTURE_ENV_MODE;
    }
    
    public final int getTEXTURE_ENV_COLOR() {
        return this.TEXTURE_ENV_COLOR;
    }
    
    public final int getTEXTURE_ENV() {
        return this.TEXTURE_ENV;
    }
    
    public final int getEYE_LINEAR() {
        return this.EYE_LINEAR;
    }
    
    public final int getOBJECT_LINEAR() {
        return this.OBJECT_LINEAR;
    }
    
    public final int getSPHERE_MAP() {
        return this.SPHERE_MAP;
    }
    
    public final int getTEXTURE_GEN_MODE() {
        return this.TEXTURE_GEN_MODE;
    }
    
    public final int getOBJECT_PLANE() {
        return this.OBJECT_PLANE;
    }
    
    public final int getEYE_PLANE() {
        return this.EYE_PLANE;
    }
    
    public final int getNEAREST() {
        return this.NEAREST;
    }
    
    public final int getLINEAR() {
        return this.LINEAR;
    }
    
    public final int getNEAREST_MIPMAP_NEAREST() {
        return this.NEAREST_MIPMAP_NEAREST;
    }
    
    public final int getLINEAR_MIPMAP_NEAREST() {
        return this.LINEAR_MIPMAP_NEAREST;
    }
    
    public final int getNEAREST_MIPMAP_LINEAR() {
        return this.NEAREST_MIPMAP_LINEAR;
    }
    
    public final int getLINEAR_MIPMAP_LINEAR() {
        return this.LINEAR_MIPMAP_LINEAR;
    }
    
    public final int getTEXTURE_MAG_FILTER() {
        return this.TEXTURE_MAG_FILTER;
    }
    
    public final int getTEXTURE_MIN_FILTER() {
        return this.TEXTURE_MIN_FILTER;
    }
    
    public final int getTEXTURE_WRAP_S() {
        return this.TEXTURE_WRAP_S;
    }
    
    public final int getTEXTURE_WRAP_T() {
        return this.TEXTURE_WRAP_T;
    }
    
    public final int getCLAMP() {
        return this.CLAMP;
    }
    
    public final int getREPEAT() {
        return this.REPEAT;
    }
    
    public final int getCLIENT_PIXEL_STORE_BIT() {
        return this.CLIENT_PIXEL_STORE_BIT;
    }
    
    public final int getCLIENT_VERTEX_ARRAY_BIT() {
        return this.CLIENT_VERTEX_ARRAY_BIT;
    }
    
    public final int getALL_CLIENT_ATTRIB_BITS() {
        return this.ALL_CLIENT_ATTRIB_BITS;
    }
    
    public final int getPOLYGON_OFFSET_FACTOR() {
        return this.POLYGON_OFFSET_FACTOR;
    }
    
    public final int getPOLYGON_OFFSET_UNITS() {
        return this.POLYGON_OFFSET_UNITS;
    }
    
    public final int getPOLYGON_OFFSET_POINT() {
        return this.POLYGON_OFFSET_POINT;
    }
    
    public final int getPOLYGON_OFFSET_LINE() {
        return this.POLYGON_OFFSET_LINE;
    }
    
    public final int getPOLYGON_OFFSET_FILL() {
        return this.POLYGON_OFFSET_FILL;
    }
    
    public final int getALPHA4() {
        return this.ALPHA4;
    }
    
    public final int getALPHA8() {
        return this.ALPHA8;
    }
    
    public final int getALPHA12() {
        return this.ALPHA12;
    }
    
    public final int getALPHA16() {
        return this.ALPHA16;
    }
    
    public final int getLUMINANCE4() {
        return this.LUMINANCE4;
    }
    
    public final int getLUMINANCE8() {
        return this.LUMINANCE8;
    }
    
    public final int getLUMINANCE12() {
        return this.LUMINANCE12;
    }
    
    public final int getLUMINANCE16() {
        return this.LUMINANCE16;
    }
    
    public final int getLUMINANCE4_ALPHA4() {
        return this.LUMINANCE4_ALPHA4;
    }
    
    public final int getLUMINANCE6_ALPHA2() {
        return this.LUMINANCE6_ALPHA2;
    }
    
    public final int getLUMINANCE8_ALPHA8() {
        return this.LUMINANCE8_ALPHA8;
    }
    
    public final int getLUMINANCE12_ALPHA4() {
        return this.LUMINANCE12_ALPHA4;
    }
    
    public final int getLUMINANCE12_ALPHA12() {
        return this.LUMINANCE12_ALPHA12;
    }
    
    public final int getLUMINANCE16_ALPHA16() {
        return this.LUMINANCE16_ALPHA16;
    }
    
    public final int getINTENSITY() {
        return this.INTENSITY;
    }
    
    public final int getINTENSITY4() {
        return this.INTENSITY4;
    }
    
    public final int getINTENSITY8() {
        return this.INTENSITY8;
    }
    
    public final int getINTENSITY12() {
        return this.INTENSITY12;
    }
    
    public final int getINTENSITY16() {
        return this.INTENSITY16;
    }
    
    public final int getR3_G3_B2() {
        return this.R3_G3_B2;
    }
    
    public final int getRGB4() {
        return this.RGB4;
    }
    
    public final int getRGB5() {
        return this.RGB5;
    }
    
    public final int getRGB8() {
        return this.RGB8;
    }
    
    public final int getRGB10() {
        return this.RGB10;
    }
    
    public final int getRGB12() {
        return this.RGB12;
    }
    
    public final int getRGB16() {
        return this.RGB16;
    }
    
    public final int getRGBA2() {
        return this.RGBA2;
    }
    
    public final int getRGBA4() {
        return this.RGBA4;
    }
    
    public final int getRGB5_A1() {
        return this.RGB5_A1;
    }
    
    public final int getRGBA8() {
        return this.RGBA8;
    }
    
    public final int getRGB10_A2() {
        return this.RGB10_A2;
    }
    
    public final int getRGBA12() {
        return this.RGBA12;
    }
    
    public final int getRGBA16() {
        return this.RGBA16;
    }
    
    public final int getTEXTURE_RED_SIZE() {
        return this.TEXTURE_RED_SIZE;
    }
    
    public final int getTEXTURE_GREEN_SIZE() {
        return this.TEXTURE_GREEN_SIZE;
    }
    
    public final int getTEXTURE_BLUE_SIZE() {
        return this.TEXTURE_BLUE_SIZE;
    }
    
    public final int getTEXTURE_ALPHA_SIZE() {
        return this.TEXTURE_ALPHA_SIZE;
    }
    
    public final int getTEXTURE_LUMINANCE_SIZE() {
        return this.TEXTURE_LUMINANCE_SIZE;
    }
    
    public final int getTEXTURE_INTENSITY_SIZE() {
        return this.TEXTURE_INTENSITY_SIZE;
    }
    
    public final int getPROXY_TEXTURE_1D() {
        return this.PROXY_TEXTURE_1D;
    }
    
    public final int getPROXY_TEXTURE_2D() {
        return this.PROXY_TEXTURE_2D;
    }
    
    public final int getTEXTURE_PRIORITY() {
        return this.TEXTURE_PRIORITY;
    }
    
    public final int getTEXTURE_RESIDENT() {
        return this.TEXTURE_RESIDENT;
    }
    
    public final int getTEXTURE_BINDING_1D() {
        return this.TEXTURE_BINDING_1D;
    }
    
    public final int getTEXTURE_BINDING_2D() {
        return this.TEXTURE_BINDING_2D;
    }
    
    public final int getVERTEX_ARRAY() {
        return this.VERTEX_ARRAY;
    }
    
    public final int getNORMAL_ARRAY() {
        return this.NORMAL_ARRAY;
    }
    
    public final int getCOLOR_ARRAY() {
        return this.COLOR_ARRAY;
    }
    
    public final int getINDEX_ARRAY() {
        return this.INDEX_ARRAY;
    }
    
    public final int getTEXTURE_COORD_ARRAY() {
        return this.TEXTURE_COORD_ARRAY;
    }
    
    public final int getEDGE_FLAG_ARRAY() {
        return this.EDGE_FLAG_ARRAY;
    }
    
    public final int getVERTEX_ARRAY_SIZE() {
        return this.VERTEX_ARRAY_SIZE;
    }
    
    public final int getVERTEX_ARRAY_TYPE() {
        return this.VERTEX_ARRAY_TYPE;
    }
    
    public final int getVERTEX_ARRAY_STRIDE() {
        return this.VERTEX_ARRAY_STRIDE;
    }
    
    public final int getNORMAL_ARRAY_TYPE() {
        return this.NORMAL_ARRAY_TYPE;
    }
    
    public final int getNORMAL_ARRAY_STRIDE() {
        return this.NORMAL_ARRAY_STRIDE;
    }
    
    public final int getCOLOR_ARRAY_SIZE() {
        return this.COLOR_ARRAY_SIZE;
    }
    
    public final int getCOLOR_ARRAY_TYPE() {
        return this.COLOR_ARRAY_TYPE;
    }
    
    public final int getCOLOR_ARRAY_STRIDE() {
        return this.COLOR_ARRAY_STRIDE;
    }
    
    public final int getINDEX_ARRAY_TYPE() {
        return this.INDEX_ARRAY_TYPE;
    }
    
    public final int getINDEX_ARRAY_STRIDE() {
        return this.INDEX_ARRAY_STRIDE;
    }
    
    public final int getTEXTURE_COORD_ARRAY_SIZE() {
        return this.TEXTURE_COORD_ARRAY_SIZE;
    }
    
    public final int getTEXTURE_COORD_ARRAY_TYPE() {
        return this.TEXTURE_COORD_ARRAY_TYPE;
    }
    
    public final int getTEXTURE_COORD_ARRAY_STRIDE() {
        return this.TEXTURE_COORD_ARRAY_STRIDE;
    }
    
    public final int getEDGE_FLAG_ARRAY_STRIDE() {
        return this.EDGE_FLAG_ARRAY_STRIDE;
    }
    
    public final int getVERTEX_ARRAY_POINTER() {
        return this.VERTEX_ARRAY_POINTER;
    }
    
    public final int getNORMAL_ARRAY_POINTER() {
        return this.NORMAL_ARRAY_POINTER;
    }
    
    public final int getCOLOR_ARRAY_POINTER() {
        return this.COLOR_ARRAY_POINTER;
    }
    
    public final int getINDEX_ARRAY_POINTER() {
        return this.INDEX_ARRAY_POINTER;
    }
    
    public final int getTEXTURE_COORD_ARRAY_POINTER() {
        return this.TEXTURE_COORD_ARRAY_POINTER;
    }
    
    public final int getEDGE_FLAG_ARRAY_POINTER() {
        return this.EDGE_FLAG_ARRAY_POINTER;
    }
    
    public final int getV2F() {
        return this.V2F;
    }
    
    public final int getV3F() {
        return this.V3F;
    }
    
    public final int getC4UB_V2F() {
        return this.C4UB_V2F;
    }
    
    public final int getC4UB_V3F() {
        return this.C4UB_V3F;
    }
    
    public final int getC3F_V3F() {
        return this.C3F_V3F;
    }
    
    public final int getN3F_V3F() {
        return this.N3F_V3F;
    }
    
    public final int getC4F_N3F_V3F() {
        return this.C4F_N3F_V3F;
    }
    
    public final int getT2F_V3F() {
        return this.T2F_V3F;
    }
    
    public final int getT4F_V4F() {
        return this.T4F_V4F;
    }
    
    public final int getT2F_C4UB_V3F() {
        return this.T2F_C4UB_V3F;
    }
    
    public final int getT2F_C3F_V3F() {
        return this.T2F_C3F_V3F;
    }
    
    public final int getT2F_N3F_V3F() {
        return this.T2F_N3F_V3F;
    }
    
    public final int getT2F_C4F_N3F_V3F() {
        return this.T2F_C4F_N3F_V3F;
    }
    
    public final int getT4F_C4F_N3F_V4F() {
        return this.T4F_C4F_N3F_V4F;
    }
    
    public final int getLOGIC_OP() {
        return this.LOGIC_OP;
    }
    
    public final int getTEXTURE_COMPONENTS() {
        return this.TEXTURE_COMPONENTS;
    }
    
    public final void pushMatrix() {
        GL11.glPushMatrix();
    }
    
    public final void popMatrix() {
        GL11.glPopMatrix();
    }
    
    public final void accum(final int op, final float value) {
        GL11.glAccum(op, value);
    }
    
    public final void alphaFunc(final int func, final float ref) {
        GL11.glAlphaFunc(func, ref);
    }
    
    public final void clearColor(final float red, final float green, final float blue, final float alpha) {
        GL11.glClearColor(red, green, blue, alpha);
    }
    
    public final void clearAccum(final float red, final float green, final float blue, final float alpha) {
        GL11.glClearAccum(red, green, blue, alpha);
    }
    
    public final void clear(final int mask) {
        GL11.glClear(mask);
    }
    
    public final void callLists(@NotNull final ByteBuffer lists) {
        Intrinsics.checkNotNullParameter((Object)lists, "lists");
        GL11.glCallLists(lists);
    }
    
    public final void callLists(@NotNull final IntBuffer lists) {
        Intrinsics.checkNotNullParameter((Object)lists, "lists");
        GL11.glCallLists(lists);
    }
    
    public final void callLists(@NotNull final ShortBuffer lists) {
        Intrinsics.checkNotNullParameter((Object)lists, "lists");
        GL11.glCallLists(lists);
    }
    
    public final void callList(final int list) {
        GL11.glCallList(list);
    }
    
    public final void blendFunc(final int sfactor, final int dfactor) {
        GL11.glBlendFunc(sfactor, dfactor);
    }
    
    public final void bitmap(final int width, final int height, final float xorig, final float yorig, final float xmove, final float ymove, @NotNull final ByteBuffer bitmap) {
        Intrinsics.checkNotNullParameter((Object)bitmap, "bitmap");
        GL11.glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap);
    }
    
    public final void bitMap(final int width, final int height, final float xorig, final float yorig, final float xmove, final float ymove, final long bitmap_buffer_offset) {
        GL11.glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap_buffer_offset);
    }
    
    public final void bindTexture(final int target, final int texture) {
        GL11.glBindTexture(target, texture);
    }
}
